{
	"id": "5ca12859df572abf3e0859735e50dc7e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.1",
	"solcLongVersion": "0.6.1+commit.e6f7d5a4",
	"input": {
		"language": "Solidity",
		"sources": {
			"11-redpacket1.sol": {
				"content": "pragma solidity ^0.6.1;\n\ncontract redpacket {\n    address payable public tuhao; // 土豪地址\n    uint public number; // 红包数量\n\n    // 构造函数：部署时需传入红包数量和以太币（msg.value）\n    constructor(uint _number) payable public {\n        require(_number > 0, \"红包数量必须大于0\");\n        require(msg.value > 0, \"必须转入以太币作为红包金额\");\n        tuhao = msg.sender;\n        number = _number;\n    }\n\n    // 获取合约余额\n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n\n    // 抢红包函数\n    function stakeMoney() public returns (bool) {\n        require(number > 0, \"红包已抢完\");\n        require(getBalance() > 0, \"红包余额已空\");\n\n        uint balance = getBalance();\n        uint amount;\n\n        // 最后一个红包：取走全部剩余余额\n        if (number == 1) {\n            amount = balance;\n        } else {\n            // 非最后一个红包：随机分配10%~90%（避免0）\n            uint random = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, number))) % 90 + 10; // 10~90\n            amount = balance * random / 100;\n            // 确保金额至少为1 wei（防止极端情况）\n            if (amount == 0) {\n                amount = 1;\n            }\n        }\n\n        // 转账给抢红包的人（外部账户一定会成功，合约账户需有fallback函数）\n        msg.sender.transfer(amount);\n        number--; // 剩余红包数减1\n\n        return true;\n    }\n\n    // 合约销毁：仅土豪可调用\n    function kill() public {\n        require(msg.sender == tuhao, \"仅土豪可销毁合约\");\n        selfdestruct(tuhao);\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"11-redpacket1.sol": {
				"redpacket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_number",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "number",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeMoney",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tuhao",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"11-redpacket1.sol\":25:1721  contract redpacket {... */\n  mstore(0x40, 0x80)\n    /* \"11-redpacket1.sol\":221:457  constructor(uint _number) payable public {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"11-redpacket1.sol\":221:457  constructor(uint _number) payable public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"11-redpacket1.sol\":290:291  0 */\n  0x00\n    /* \"11-redpacket1.sol\":280:287  _number */\n  dup2\n    /* \"11-redpacket1.sol\":280:291  _number > 0 */\n  gt\n    /* \"11-redpacket1.sol\":272:321  require(_number > 0, \"红包数量必须大于0\") */\n  tag_4\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x19\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0xe7baa2e58c85e695b0e9878fe5bf85e9a1bbe5a4a7e4ba8e3000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_4:\n    /* \"11-redpacket1.sol\":351:352  0 */\n  0x00\n    /* \"11-redpacket1.sol\":339:348  msg.value */\n  callvalue\n    /* \"11-redpacket1.sol\":339:352  msg.value > 0 */\n  gt\n    /* \"11-redpacket1.sol\":331:396  require(msg.value > 0, \"必须转入以太币作为红包金额\") */\n  tag_5\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x27\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  data_ca2b711dd50258ced4fc76d870403ecdbaf2e6e7c314562883062de12d0c39fe\n  0x27\n  swap2\n  codecopy\n  0x40\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_5:\n    /* \"11-redpacket1.sol\":414:424  msg.sender */\n  caller\n    /* \"11-redpacket1.sol\":406:411  tuhao */\n  0x00\n  dup1\n    /* \"11-redpacket1.sol\":406:424  tuhao = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"11-redpacket1.sol\":443:450  _number */\n  dup1\n    /* \"11-redpacket1.sol\":434:440  number */\n  0x01\n    /* \"11-redpacket1.sol\":434:450  number = _number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"11-redpacket1.sol\":221:457  constructor(uint _number) payable public {... */\n  pop\n    /* \"11-redpacket1.sol\":25:1721  contract redpacket {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_ca2b711dd50258ced4fc76d870403ecdbaf2e6e7c314562883062de12d0c39fe e5bf85e9a1bbe8bdace585a5e4bba5e5a4aae5b881e4bd9ce4b8bae7baa2e58c85e98791e9a29d\n\nsub_0: assembly {\n        /* \"11-redpacket1.sol\":25:1721  contract redpacket {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"11-redpacket1.sol\":25:1721  contract redpacket {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x41c0e1b5\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6878dfa4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8381f58a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdaa7fd17\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"11-redpacket1.sol\":489:583  function getBalance() public view returns (uint) {... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"11-redpacket1.sol\":1594:1719  function kill() public {... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      stop\n        /* \"11-redpacket1.sol\":50:78  address payable public tuhao */\n    tag_5:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"11-redpacket1.sol\":100:118  uint public number */\n    tag_6:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"11-redpacket1.sol\":612:1547  function stakeMoney() public returns (bool) {... */\n    tag_7:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"11-redpacket1.sol\":489:583  function getBalance() public view returns (uint) {... */\n    tag_9:\n        /* \"11-redpacket1.sol\":532:536  uint */\n      0x00\n        /* \"11-redpacket1.sol\":555:576  address(this).balance */\n      selfbalance\n        /* \"11-redpacket1.sol\":548:576  return address(this).balance */\n      swap1\n      pop\n        /* \"11-redpacket1.sol\":489:583  function getBalance() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"11-redpacket1.sol\":1594:1719  function kill() public {... */\n    tag_11:\n        /* \"11-redpacket1.sol\":1649:1654  tuhao */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"11-redpacket1.sol\":1635:1654  msg.sender == tuhao */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"11-redpacket1.sol\":1635:1645  msg.sender */\n      caller\n        /* \"11-redpacket1.sol\":1635:1654  msg.sender == tuhao */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"11-redpacket1.sol\":1627:1683  require(msg.sender == tuhao, \"仅土豪可销毁合约\") */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x18\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0xe4bb85e59c9fe8b1aae58fafe99480e6af81e59088e7baa60000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"11-redpacket1.sol\":1706:1711  tuhao */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"11-redpacket1.sol\":1693:1712  selfdestruct(tuhao) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"11-redpacket1.sol\":50:78  address payable public tuhao */\n    tag_13:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"11-redpacket1.sol\":100:118  uint public number */\n    tag_15:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"11-redpacket1.sol\":612:1547  function stakeMoney() public returns (bool) {... */\n    tag_17:\n        /* \"11-redpacket1.sol\":650:654  bool */\n      0x00\n        /* \"11-redpacket1.sol\":683:684  0 */\n      dup1\n        /* \"11-redpacket1.sol\":674:680  number */\n      sload(0x01)\n        /* \"11-redpacket1.sol\":674:684  number > 0 */\n      gt\n        /* \"11-redpacket1.sol\":666:704  require(number > 0, \"红包已抢完\") */\n      tag_22\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0xe7baa2e58c85e5b7b2e68aa2e5ae8c0000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_22:\n        /* \"11-redpacket1.sol\":737:738  0 */\n      0x00\n        /* \"11-redpacket1.sol\":722:734  getBalance() */\n      tag_23\n        /* \"11-redpacket1.sol\":722:732  getBalance */\n      tag_9\n        /* \"11-redpacket1.sol\":722:734  getBalance() */\n      jump\t// in\n    tag_23:\n        /* \"11-redpacket1.sol\":722:738  getBalance() > 0 */\n      gt\n        /* \"11-redpacket1.sol\":714:761  require(getBalance() > 0, \"红包余额已空\") */\n      tag_24\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0xe7baa2e58c85e4bd99e9a29de5b7b2e7a9ba0000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_24:\n        /* \"11-redpacket1.sol\":772:784  uint balance */\n      0x00\n        /* \"11-redpacket1.sol\":787:799  getBalance() */\n      tag_25\n        /* \"11-redpacket1.sol\":787:797  getBalance */\n      tag_9\n        /* \"11-redpacket1.sol\":787:799  getBalance() */\n      jump\t// in\n    tag_25:\n        /* \"11-redpacket1.sol\":772:799  uint balance = getBalance() */\n      swap1\n      pop\n        /* \"11-redpacket1.sol\":809:820  uint amount */\n      0x00\n        /* \"11-redpacket1.sol\":902:903  1 */\n      0x01\n        /* \"11-redpacket1.sol\":892:898  number */\n      dup1\n      sload\n        /* \"11-redpacket1.sol\":892:903  number == 1 */\n      eq\n        /* \"11-redpacket1.sol\":888:1336  if (number == 1) {... */\n      iszero\n      tag_26\n      jumpi\n        /* \"11-redpacket1.sol\":928:935  balance */\n      dup2\n        /* \"11-redpacket1.sol\":919:935  amount = balance */\n      swap1\n      pop\n        /* \"11-redpacket1.sol\":888:1336  if (number == 1) {... */\n      jump(tag_27)\n    tag_26:\n        /* \"11-redpacket1.sol\":1038:1049  uint random */\n      0x00\n        /* \"11-redpacket1.sol\":1130:1132  10 */\n      0x0a\n        /* \"11-redpacket1.sol\":1125:1127  90 */\n      0x5a\n        /* \"11-redpacket1.sol\":1084:1099  block.timestamp */\n      timestamp\n        /* \"11-redpacket1.sol\":1101:1111  msg.sender */\n      caller\n        /* \"11-redpacket1.sol\":1113:1119  number */\n      sload(0x01)\n        /* \"11-redpacket1.sol\":1067:1120  abi.encodePacked(block.timestamp, msg.sender, number) */\n      add(0x20, mload(0x40))\n      dup1\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"11-redpacket1.sol\":1067:1120  abi.encodePacked(block.timestamp, msg.sender, number) */\n      swap1\n      0x40\n      mstore\n        /* \"11-redpacket1.sol\":1057:1121  keccak256(abi.encodePacked(block.timestamp, msg.sender, number)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"11-redpacket1.sol\":1052:1122  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, number))) */\n      0x00\n      shr\n        /* \"11-redpacket1.sol\":1052:1127  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, number))) % 90 */\n      dup2\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n      mod\n        /* \"11-redpacket1.sol\":1052:1132  uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, number))) % 90 + 10 */\n      add\n        /* \"11-redpacket1.sol\":1038:1132  uint random = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, number))) % 90 + 10 */\n      swap1\n      pop\n        /* \"11-redpacket1.sol\":1183:1186  100 */\n      0x64\n        /* \"11-redpacket1.sol\":1174:1180  random */\n      dup2\n        /* \"11-redpacket1.sol\":1164:1171  balance */\n      dup5\n        /* \"11-redpacket1.sol\":1164:1180  balance * random */\n      mul\n        /* \"11-redpacket1.sol\":1164:1186  balance * random / 100 */\n      dup2\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      div\n        /* \"11-redpacket1.sol\":1155:1186  amount = balance * random / 100 */\n      swap2\n      pop\n        /* \"11-redpacket1.sol\":1280:1281  0 */\n      0x00\n        /* \"11-redpacket1.sol\":1270:1276  amount */\n      dup3\n        /* \"11-redpacket1.sol\":1270:1281  amount == 0 */\n      eq\n        /* \"11-redpacket1.sol\":1266:1326  if (amount == 0) {... */\n      iszero\n      tag_30\n      jumpi\n        /* \"11-redpacket1.sol\":1310:1311  1 */\n      0x01\n        /* \"11-redpacket1.sol\":1301:1311  amount = 1 */\n      swap2\n      pop\n        /* \"11-redpacket1.sol\":1266:1326  if (amount == 0) {... */\n    tag_30:\n        /* \"11-redpacket1.sol\":888:1336  if (number == 1) {... */\n      pop\n    tag_27:\n        /* \"11-redpacket1.sol\":1450:1460  msg.sender */\n      caller\n        /* \"11-redpacket1.sol\":1450:1469  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"11-redpacket1.sol\":1450:1477  msg.sender.transfer(amount) */\n      0x08fc\n        /* \"11-redpacket1.sol\":1470:1476  amount */\n      dup3\n        /* \"11-redpacket1.sol\":1450:1477  msg.sender.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"11-redpacket1.sol\":1450:1477  msg.sender.transfer(amount) */\n      pop\n        /* \"11-redpacket1.sol\":1487:1493  number */\n      0x01\n      0x00\n        /* \"11-redpacket1.sol\":1487:1495  number-- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"11-redpacket1.sol\":1536:1540  true */\n      0x01\n        /* \"11-redpacket1.sol\":1529:1540  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"11-redpacket1.sol\":612:1547  function stakeMoney() public returns (bool) {... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e45c513fed823b2a0ae07eded670b34c4252887a5171413ecdd35165d0d1572364736f6c63430006010033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260405161060b38038061060b8339818101604052602081101561002657600080fd5b8101908080519060200190929190505050600081116100ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807fe7baa2e58c85e695b0e9878fe5bf85e9a1bbe5a4a7e4ba8e300000000000000081525060200191505060405180910390fd5b60003411610106576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260278152602001806105e46027913960400191505060405180910390fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600181905550506104878061015d6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806312065fe01461005c57806341c0e1b51461007a5780636878dfa4146100845780638381f58a146100ce578063daa7fd17146100ec575b600080fd5b61006461010e565b6040518082815260200191505060405180910390f35b610082610116565b005b61008c610212565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100d6610237565b6040518082815260200191505060405180910390f35b6100f461023d565b604051808215151515815260200191505060405180910390f35b600047905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807fe4bb85e59c9fe8b1aae58fafe99480e6af81e59088e7baa6000000000000000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600080600154116102b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807fe7baa2e58c85e5b7b2e68aa2e5ae8c000000000000000000000000000000000081525060200191505060405180910390fd5b60006102c061010e565b11610333576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807fe7baa2e58c85e4bd99e9a29de5b7b2e7a9ba000000000000000000000000000081525060200191505060405180910390fd5b600061033d61010e565b90506000600180541415610353578190506103ee565b6000600a605a4233600154604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c816103cb57fe5b060190506064818402816103db57fe5b04915060008214156103ec57600191505b505b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610434573d6000803e3d6000fd5b50600160008154809291906001900391905055506001925050509056fea2646970667358221220e45c513fed823b2a0ae07eded670b34c4252887a5171413ecdd35165d0d1572364736f6c63430006010033e5bf85e9a1bbe8bdace585a5e4bba5e5a4aae5b881e4bd9ce4b8bae7baa2e58c85e98791e9a29d",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x60B CODESIZE SUB DUP1 PUSH2 0x60B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 DUP2 GT PUSH2 0xAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x19 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE7BAA2E58C85E695B0E9878FE5BF85E9A1BBE5A4A7E4BA8E3000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x106 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x27 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x5E4 PUSH1 0x27 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0x487 DUP1 PUSH2 0x15D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x6878DFA4 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8381F58A EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xDAA7FD17 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE4BB85E59C9FE8B1AAE58FAFE99480E6AF81E59088E7BAA60000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT PUSH2 0x2B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE7BAA2E58C85E5B7B2E68AA2E5AE8C0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C0 PUSH2 0x10E JUMP JUMPDEST GT PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE7BAA2E58C85E4BD99E9A29DE5B7B2E7A9BA0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33D PUSH2 0x10E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD EQ ISZERO PUSH2 0x353 JUMPI DUP2 SWAP1 POP PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x5A TIMESTAMP CALLER PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP2 PUSH2 0x3CB JUMPI INVALID JUMPDEST MOD ADD SWAP1 POP PUSH1 0x64 DUP2 DUP5 MUL DUP2 PUSH2 0x3DB JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x3EC JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x434 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x5C MLOAD EXTCODEHASH 0xED DUP3 EXTCODESIZE 0x2A EXP 0xE0 PUSH31 0xDED670B34C4252887A5171413ECDD35165D0D1572364736F6C634300060100 CALLER 0xE5 0xBF DUP6 0xE9 LOG1 0xBB 0xE8 0xBD 0xAC 0xE5 DUP6 0xA5 0xE4 0xBB 0xA5 0xE5 LOG4 0xAA 0xE5 0xB8 DUP2 0xE4 0xBD SWAP13 0xE4 0xB8 0xBA 0xE7 0xBA LOG2 0xE5 DUP13 DUP6 0xE9 DUP8 SWAP2 0xE9 LOG2 SWAP14 ",
							"sourceMap": "25:1696:0:-:0;;;221:236;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;221:236:0;;;;;;;;;;;;;;;;290:1;280:7;:11;272:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;351:1;339:9;:13;331:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;414:10;406:5;;:18;;;;;;;;;;;;;;;;;;443:7;434:6;:16;;;;221:236;25:1696;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c806312065fe01461005c57806341c0e1b51461007a5780636878dfa4146100845780638381f58a146100ce578063daa7fd17146100ec575b600080fd5b61006461010e565b6040518082815260200191505060405180910390f35b610082610116565b005b61008c610212565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100d6610237565b6040518082815260200191505060405180910390f35b6100f461023d565b604051808215151515815260200191505060405180910390f35b600047905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807fe4bb85e59c9fe8b1aae58fafe99480e6af81e59088e7baa6000000000000000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b600080600154116102b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807fe7baa2e58c85e5b7b2e68aa2e5ae8c000000000000000000000000000000000081525060200191505060405180910390fd5b60006102c061010e565b11610333576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807fe7baa2e58c85e4bd99e9a29de5b7b2e7a9ba000000000000000000000000000081525060200191505060405180910390fd5b600061033d61010e565b90506000600180541415610353578190506103ee565b6000600a605a4233600154604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c816103cb57fe5b060190506064818402816103db57fe5b04915060008214156103ec57600191505b505b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610434573d6000803e3d6000fd5b50600160008154809291906001900391905055506001925050509056fea2646970667358221220e45c513fed823b2a0ae07eded670b34c4252887a5171413ecdd35165d0d1572364736f6c63430006010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x6878DFA4 EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0x8381F58A EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xDAA7FD17 EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x10E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x82 PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8C PUSH2 0x212 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD6 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF4 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x18 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE4BB85E59C9FE8B1AAE58FAFE99480E6AF81E59088E7BAA60000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT PUSH2 0x2B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE7BAA2E58C85E5B7B2E68AA2E5AE8C0000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C0 PUSH2 0x10E JUMP JUMPDEST GT PUSH2 0x333 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0xE7BAA2E58C85E4BD99E9A29DE5B7B2E7A9BA0000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x33D PUSH2 0x10E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD EQ ISZERO PUSH2 0x353 JUMPI DUP2 SWAP1 POP PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x5A TIMESTAMP CALLER PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x0 SHR DUP2 PUSH2 0x3CB JUMPI INVALID JUMPDEST MOD ADD SWAP1 POP PUSH1 0x64 DUP2 DUP5 MUL DUP2 PUSH2 0x3DB JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x3EC JUMPI PUSH1 0x1 SWAP2 POP JUMPDEST POP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x434 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x5C MLOAD EXTCODEHASH 0xED DUP3 EXTCODESIZE 0x2A EXP 0xE0 PUSH31 0xDED670B34C4252887A5171413ECDD35165D0D1572364736F6C634300060100 CALLER ",
							"sourceMap": "25:1696:0:-:0;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:1696:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;489:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1594:125;;;:::i;:::-;;50:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;100:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;612:935;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;489:94;532:4;555:21;548:28;;489:94;:::o;1594:125::-;1649:5;;;;;;;;;;;1635:19;;:10;:19;;;1627:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1706:5;;;;;;;;;;;1693:19;;;50:28;;;;;;;;;;;;;:::o;100:18::-;;;;:::o;612:935::-;650:4;683:1;674:6;;:10;666:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;737:1;722:12;:10;:12::i;:::-;:16;714:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;772:12;787;:10;:12::i;:::-;772:27;;809:11;902:1;892:6;;:11;888:448;;;928:7;919:16;;888:448;;;1038:11;1130:2;1125;1084:15;1101:10;1113:6;;1067:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1067:53:0;;;1057:64;;;;;;1052:70;;:75;;;;;;:80;1038:94;;1183:3;1174:6;1164:7;:16;:22;;;;;;1155:31;;1280:1;1270:6;:11;1266:60;;;1310:1;1301:10;;1266:60;888:448;;1450:10;:19;;:27;1470:6;1450:27;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1450:27:0;1487:6;;:8;;;;;;;;;;;;;;1536:4;1529:11;;;;612:935;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "231800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getBalance()": "193",
								"kill()": "31850",
								"number()": "1049",
								"stakeMoney()": "infinite",
								"tuhao()": "1075"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 1721,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 1721,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 1721,
									"name": "MSTORE"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "MLOAD"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "PUSHSIZE"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "CODESIZE"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "SUB"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "DUP1"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "PUSHSIZE"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "DUP4"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "CODECOPY"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "DUP2"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "DUP2"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "ADD"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "DUP2"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "ADD"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "SWAP1"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "DUP1"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "DUP1"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "MLOAD"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "SWAP1"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "ADD"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "SWAP1"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "SWAP3"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "SWAP2"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "SWAP1"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "POP"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "POP"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "POP"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 280,
									"end": 287,
									"name": "DUP2"
								},
								{
									"begin": 280,
									"end": 291,
									"name": "GT"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "JUMPI"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "MLOAD"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "MSTORE"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "ADD"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "DUP1"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "DUP1"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "ADD"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "DUP3"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "SUB"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "DUP3"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "MSTORE"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "PUSH",
									"value": "19"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "MSTORE"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "ADD"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "DUP1"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "PUSH",
									"value": "E7BAA2E58C85E695B0E9878FE5BF85E9A1BBE5A4A7E4BA8E3000000000000000"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "MSTORE"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "POP"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "ADD"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "SWAP2"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "POP"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "POP"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "MLOAD"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "DUP1"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "SWAP2"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "SUB"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "SWAP1"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "REVERT"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 272,
									"end": 321,
									"name": "JUMPDEST"
								},
								{
									"begin": 351,
									"end": 352,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 339,
									"end": 348,
									"name": "CALLVALUE"
								},
								{
									"begin": 339,
									"end": 352,
									"name": "GT"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "PUSH [tag]",
									"value": "5"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "JUMPI"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "MLOAD"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "PUSH",
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "MSTORE"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "ADD"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "ADD"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "DUP3"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "SUB"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "DUP3"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "MSTORE"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "PUSH",
									"value": "27"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "MSTORE"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "ADD"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "PUSH data",
									"value": "CA2B711DD50258CED4FC76D870403ECDBAF2E6E7C314562883062DE12D0C39FE"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "PUSH",
									"value": "27"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "SWAP2"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "CODECOPY"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "ADD"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "SWAP2"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "POP"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "POP"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "MLOAD"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "DUP1"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "SWAP2"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "SUB"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "SWAP1"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "REVERT"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "tag",
									"value": "5"
								},
								{
									"begin": 331,
									"end": 396,
									"name": "JUMPDEST"
								},
								{
									"begin": 414,
									"end": 424,
									"name": "CALLER"
								},
								{
									"begin": 406,
									"end": 411,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 406,
									"end": 411,
									"name": "DUP1"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "EXP"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "DUP2"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "SLOAD"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "DUP2"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "MUL"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "NOT"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "AND"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "SWAP1"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "DUP4"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "AND"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "MUL"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "OR"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "SWAP1"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "SSTORE"
								},
								{
									"begin": 406,
									"end": 424,
									"name": "POP"
								},
								{
									"begin": 443,
									"end": 450,
									"name": "DUP1"
								},
								{
									"begin": 434,
									"end": 440,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 434,
									"end": 450,
									"name": "DUP2"
								},
								{
									"begin": 434,
									"end": 450,
									"name": "SWAP1"
								},
								{
									"begin": 434,
									"end": 450,
									"name": "SSTORE"
								},
								{
									"begin": 434,
									"end": 450,
									"name": "POP"
								},
								{
									"begin": 221,
									"end": 457,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 1721,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 1721,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 1721,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 1721,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 1721,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 1721,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 1721,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e45c513fed823b2a0ae07eded670b34c4252887a5171413ecdd35165d0d1572364736f6c63430006010033",
									".code": [
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "SHR"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH",
											"value": "12065FE0"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH",
											"value": "41C0E1B5"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH",
											"value": "6878DFA4"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH",
											"value": "8381F58A"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH",
											"value": "DAA7FD17"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 1721,
											"name": "REVERT"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "JUMPDEST"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "JUMPDEST"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "MLOAD"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "DUP1"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "DUP3"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "DUP2"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "MSTORE"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "ADD"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "SWAP2"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "POP"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "POP"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "MLOAD"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "DUP1"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "SWAP2"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "SUB"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "RETURN"
										},
										{
											"begin": 1594,
											"end": 1719,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1594,
											"end": 1719,
											"name": "JUMPDEST"
										},
										{
											"begin": 1594,
											"end": 1719,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1594,
											"end": 1719,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1594,
											"end": 1719,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1594,
											"end": 1719,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1594,
											"end": 1719,
											"name": "JUMPDEST"
										},
										{
											"begin": 1594,
											"end": 1719,
											"name": "STOP"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "DUP3"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "AND"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "AND"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "DUP2"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "MSTORE"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "ADD"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "SWAP2"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "POP"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "SWAP2"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "SUB"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "RETURN"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "JUMPDEST"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "JUMPDEST"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "MLOAD"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "DUP1"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "DUP2"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "MSTORE"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "ADD"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "POP"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "POP"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "MLOAD"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "DUP1"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "SWAP2"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "SUB"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "SWAP1"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "RETURN"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "JUMPDEST"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "JUMPDEST"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "MLOAD"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "DUP1"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "DUP3"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "ISZERO"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "ISZERO"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "ISZERO"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "ISZERO"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "DUP2"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "MSTORE"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "ADD"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "SWAP2"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "POP"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "POP"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "MLOAD"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "DUP1"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "SWAP2"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "SUB"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "SWAP1"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "RETURN"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "JUMPDEST"
										},
										{
											"begin": 532,
											"end": 536,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 555,
											"end": 576,
											"name": "SELFBALANCE"
										},
										{
											"begin": 548,
											"end": 576,
											"name": "SWAP1"
										},
										{
											"begin": 548,
											"end": 576,
											"name": "POP"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 489,
											"end": 583,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1594,
											"end": 1719,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1594,
											"end": 1719,
											"name": "JUMPDEST"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "DUP1"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "SLOAD"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "EXP"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "SWAP1"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "DIV"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1649,
											"end": 1654,
											"name": "AND"
										},
										{
											"begin": 1635,
											"end": 1654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1654,
											"name": "AND"
										},
										{
											"begin": 1635,
											"end": 1645,
											"name": "CALLER"
										},
										{
											"begin": 1635,
											"end": 1654,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1635,
											"end": 1654,
											"name": "AND"
										},
										{
											"begin": 1635,
											"end": 1654,
											"name": "EQ"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "JUMPI"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "MLOAD"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "DUP2"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "MSTORE"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "ADD"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "DUP1"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "DUP1"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "ADD"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "DUP3"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "DUP2"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "SUB"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "DUP3"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "MSTORE"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "PUSH",
											"value": "18"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "DUP2"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "MSTORE"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "ADD"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "DUP1"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "PUSH",
											"value": "E4BB85E59C9FE8B1AAE58FAFE99480E6AF81E59088E7BAA60000000000000000"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "DUP2"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "MSTORE"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "POP"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "ADD"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "SWAP2"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "POP"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "POP"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "MLOAD"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "DUP1"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "SWAP2"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "SUB"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "SWAP1"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "REVERT"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1627,
											"end": 1683,
											"name": "JUMPDEST"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DUP1"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "SLOAD"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "EXP"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "SWAP1"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "DIV"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1706,
											"end": 1711,
											"name": "AND"
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "AND"
										},
										{
											"begin": 1693,
											"end": 1712,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "JUMPDEST"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "DUP1"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "SLOAD"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "EXP"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "SWAP1"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "DIV"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "AND"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "DUP2"
										},
										{
											"begin": 50,
											"end": 78,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "JUMPDEST"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "SLOAD"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "DUP2"
										},
										{
											"begin": 100,
											"end": 118,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "JUMPDEST"
										},
										{
											"begin": 650,
											"end": 654,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 683,
											"end": 684,
											"name": "DUP1"
										},
										{
											"begin": 674,
											"end": 680,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 674,
											"end": 680,
											"name": "SLOAD"
										},
										{
											"begin": 674,
											"end": 684,
											"name": "GT"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "JUMPI"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "MLOAD"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "DUP2"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "MSTORE"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "ADD"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "DUP1"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "DUP1"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "ADD"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "DUP3"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "DUP2"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "SUB"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "DUP3"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "MSTORE"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "DUP2"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "MSTORE"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "ADD"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "DUP1"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "PUSH",
											"value": "E7BAA2E58C85E5B7B2E68AA2E5AE8C0000000000000000000000000000000000"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "DUP2"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "MSTORE"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "POP"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "ADD"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "SWAP2"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "POP"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "POP"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "MLOAD"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "DUP1"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "SWAP2"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "SUB"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "SWAP1"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "REVERT"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 666,
											"end": 704,
											"name": "JUMPDEST"
										},
										{
											"begin": 737,
											"end": 738,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 722,
											"end": 734,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 722,
											"end": 732,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 722,
											"end": 734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 722,
											"end": 734,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 722,
											"end": 734,
											"name": "JUMPDEST"
										},
										{
											"begin": 722,
											"end": 738,
											"name": "GT"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "JUMPI"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "MLOAD"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "DUP2"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "MSTORE"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "ADD"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "ADD"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "DUP3"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "DUP2"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "SUB"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "DUP3"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "MSTORE"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "DUP2"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "MSTORE"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "ADD"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "PUSH",
											"value": "E7BAA2E58C85E4BD99E9A29DE5B7B2E7A9BA0000000000000000000000000000"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "DUP2"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "MSTORE"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "ADD"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "POP"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "MLOAD"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "DUP1"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "SWAP2"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "SUB"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "SWAP1"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "REVERT"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 714,
											"end": 761,
											"name": "JUMPDEST"
										},
										{
											"begin": 772,
											"end": 784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 787,
											"end": 797,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 787,
											"end": 799,
											"name": "JUMPDEST"
										},
										{
											"begin": 772,
											"end": 799,
											"name": "SWAP1"
										},
										{
											"begin": 772,
											"end": 799,
											"name": "POP"
										},
										{
											"begin": 809,
											"end": 820,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 902,
											"end": 903,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 892,
											"end": 898,
											"name": "DUP1"
										},
										{
											"begin": 892,
											"end": 898,
											"name": "SLOAD"
										},
										{
											"begin": 892,
											"end": 903,
											"name": "EQ"
										},
										{
											"begin": 888,
											"end": 1336,
											"name": "ISZERO"
										},
										{
											"begin": 888,
											"end": 1336,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 888,
											"end": 1336,
											"name": "JUMPI"
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 919,
											"end": 935,
											"name": "SWAP1"
										},
										{
											"begin": 919,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 888,
											"end": 1336,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 888,
											"end": 1336,
											"name": "JUMP"
										},
										{
											"begin": 888,
											"end": 1336,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 888,
											"end": 1336,
											"name": "JUMPDEST"
										},
										{
											"begin": 1038,
											"end": 1049,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1130,
											"end": 1132,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1125,
											"end": 1127,
											"name": "PUSH",
											"value": "5A"
										},
										{
											"begin": 1084,
											"end": 1099,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1101,
											"end": 1111,
											"name": "CALLER"
										},
										{
											"begin": 1113,
											"end": 1119,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1113,
											"end": 1119,
											"name": "SLOAD"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "MLOAD"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "ADD"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "DUP1"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "DUP5"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "DUP2"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "MSTORE"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "ADD"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "DUP4"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "AND"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "AND"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "SHL"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "DUP2"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "MSTORE"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "ADD"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "DUP3"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "DUP2"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "MSTORE"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "ADD"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "SWAP4"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "POP"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "POP"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "POP"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "POP"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "SWAP1"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1067,
											"end": 1120,
											"name": "MSTORE"
										},
										{
											"begin": 1057,
											"end": 1121,
											"name": "DUP1"
										},
										{
											"begin": 1057,
											"end": 1121,
											"name": "MLOAD"
										},
										{
											"begin": 1057,
											"end": 1121,
											"name": "SWAP1"
										},
										{
											"begin": 1057,
											"end": 1121,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1121,
											"name": "ADD"
										},
										{
											"begin": 1057,
											"end": 1121,
											"name": "KECCAK256"
										},
										{
											"begin": 1052,
											"end": 1122,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1052,
											"end": 1122,
											"name": "SHR"
										},
										{
											"begin": 1052,
											"end": 1127,
											"name": "DUP2"
										},
										{
											"begin": 1052,
											"end": 1127,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1052,
											"end": 1127,
											"name": "JUMPI"
										},
										{
											"begin": 1052,
											"end": 1127,
											"name": "INVALID"
										},
										{
											"begin": 1052,
											"end": 1127,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1052,
											"end": 1127,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1127,
											"name": "MOD"
										},
										{
											"begin": 1052,
											"end": 1132,
											"name": "ADD"
										},
										{
											"begin": 1038,
											"end": 1132,
											"name": "SWAP1"
										},
										{
											"begin": 1038,
											"end": 1132,
											"name": "POP"
										},
										{
											"begin": 1183,
											"end": 1186,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1171,
											"name": "DUP5"
										},
										{
											"begin": 1164,
											"end": 1180,
											"name": "MUL"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "DUP2"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "JUMPI"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "INVALID"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "JUMPDEST"
										},
										{
											"begin": 1164,
											"end": 1186,
											"name": "DIV"
										},
										{
											"begin": 1155,
											"end": 1186,
											"name": "SWAP2"
										},
										{
											"begin": 1155,
											"end": 1186,
											"name": "POP"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "DUP3"
										},
										{
											"begin": 1270,
											"end": 1281,
											"name": "EQ"
										},
										{
											"begin": 1266,
											"end": 1326,
											"name": "ISZERO"
										},
										{
											"begin": 1266,
											"end": 1326,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1266,
											"end": 1326,
											"name": "JUMPI"
										},
										{
											"begin": 1310,
											"end": 1311,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "SWAP2"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "POP"
										},
										{
											"begin": 1266,
											"end": 1326,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1266,
											"end": 1326,
											"name": "JUMPDEST"
										},
										{
											"begin": 888,
											"end": 1336,
											"name": "POP"
										},
										{
											"begin": 888,
											"end": 1336,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 888,
											"end": 1336,
											"name": "JUMPDEST"
										},
										{
											"begin": 1450,
											"end": 1460,
											"name": "CALLER"
										},
										{
											"begin": 1450,
											"end": 1469,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1450,
											"end": 1469,
											"name": "AND"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1470,
											"end": 1476,
											"name": "DUP3"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "SWAP1"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "DUP2"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "ISZERO"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "MUL"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "SWAP1"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "MLOAD"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "MLOAD"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "DUP1"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "DUP4"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "SUB"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "DUP2"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "DUP6"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "DUP9"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "DUP9"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "CALL"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "SWAP4"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "POP"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "POP"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "POP"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "POP"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1450,
											"end": 1477,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1493,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1493,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "DUP2"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "SLOAD"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "DUP1"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "SWAP3"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "SUB"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "SWAP2"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "SWAP1"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "POP"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "SSTORE"
										},
										{
											"begin": 1487,
											"end": 1495,
											"name": "POP"
										},
										{
											"begin": 1536,
											"end": 1540,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1529,
											"end": 1540,
											"name": "SWAP3"
										},
										{
											"begin": 1529,
											"end": 1540,
											"name": "POP"
										},
										{
											"begin": 1529,
											"end": 1540,
											"name": "POP"
										},
										{
											"begin": 1529,
											"end": 1540,
											"name": "POP"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "SWAP1"
										},
										{
											"begin": 612,
											"end": 1547,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								},
								"CA2B711DD50258CED4FC76D870403ECDBAF2E6E7C314562883062DE12D0C39FE": "e5bf85e9a1bbe8bdace585a5e4bba5e5a4aae5b881e4bd9ce4b8bae7baa2e58c85e98791e9a29d"
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"kill()": "41c0e1b5",
							"number()": "8381f58a",
							"stakeMoney()": "daa7fd17",
							"tuhao()": "6878dfa4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_number\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeMoney\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tuhao\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"11-redpacket1.sol\":\"redpacket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"11-redpacket1.sol\":{\"keccak256\":\"0x74edf1e7c782e2edea86b9e433853d07fcc66fa61240075fecc8d4d42051c776\",\"urls\":[\"bzz-raw://9cf83c7ea0b5fa2c8784382139708cabf863d836a6fabbcf18be8e52a3e464d1\",\"dweb:/ipfs/QmdjwLyovT9FCQRa8awZb8feQvKyTHv1HmAHpxZxMUWJ1Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "11-redpacket1.sol:redpacket",
								"label": "tuhao",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "11-redpacket1.sol:redpacket",
								"label": "number",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"11-redpacket1.sol": {
				"ast": {
					"absolutePath": "11-redpacket1.sol",
					"exportedSymbols": {
						"redpacket": [
							153
						]
					},
					"id": 154,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 153,
							"linearizedBaseContracts": [
								153
							],
							"name": "redpacket",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "6878dfa4",
									"id": 3,
									"name": "tuhao",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 153,
									"src": "50:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "50:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8381f58a",
									"id": 5,
									"name": "number",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 153,
									"src": "100:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "100:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "262:195:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 13,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 11,
																"name": "_number",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "280:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 12,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "290:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "280:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "e7baa2e58c85e695b0e9878fe5bf85e9a1bbe5a4a7e4ba8e30",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "293:27:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1ae2b5e82445e1b408fd699babd8dabfc6557b292b45c53805baf23b18d4050",
																"typeString": "literal_string \"红包数量必须大于0\""
															},
															"value": "红包数量必须大于0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1ae2b5e82445e1b408fd699babd8dabfc6557b292b45c53805baf23b18d4050",
																"typeString": "literal_string \"红包数量必须大于0\""
															}
														],
														"id": 10,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															171,
															172
														],
														"referencedDeclaration": 172,
														"src": "272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "272:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "272:49:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 18,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "339:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "339:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "351:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "339:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "e5bf85e9a1bbe8bdace585a5e4bba5e5a4aae5b881e4bd9ce4b8bae7baa2e58c85e98791e9a29d",
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "354:41:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ca2b711dd50258ced4fc76d870403ecdbaf2e6e7c314562883062de12d0c39fe",
																"typeString": "literal_string \"必须转入以太币作为红包金额\""
															},
															"value": "必须转入以太币作为红包金额"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ca2b711dd50258ced4fc76d870403ecdbaf2e6e7c314562883062de12d0c39fe",
																"typeString": "literal_string \"必须转入以太币作为红包金额\""
															}
														],
														"id": 17,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															171,
															172
														],
														"referencedDeclaration": 172,
														"src": "331:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "331:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "331:65:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 25,
														"name": "tuhao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "406:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 26,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "414:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 27,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "414:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "406:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "406:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 30,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "434:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 31,
														"name": "_number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "434:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "434:16:0"
											}
										]
									},
									"documentation": null,
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"name": "_number",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 35,
												"src": "233:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "233:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "232:14:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:0:0"
									},
									"scope": 153,
									"src": "221:236:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "538:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 42,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "563:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_redpacket_$153",
																	"typeString": "contract redpacket"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_redpacket_$153",
																	"typeString": "contract redpacket"
																}
															],
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "555:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 40,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "555:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "555:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "555:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 39,
												"id": 45,
												"nodeType": "Return",
												"src": "548:28:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "12065fe0",
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "508:2:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 47,
												"src": "532:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "532:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "531:6:0"
									},
									"scope": 153,
									"src": "489:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "656:891:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 53,
																"name": "number",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "674:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "683:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "674:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "e7baa2e58c85e5b7b2e68aa2e5ae8c",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "686:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2469f2d06f283c7d761ee0186ce3b5f7c66d9258312fdbde8fbbc959cac0628d",
																"typeString": "literal_string \"红包已抢完\""
															},
															"value": "红包已抢完"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2469f2d06f283c7d761ee0186ce3b5f7c66d9258312fdbde8fbbc959cac0628d",
																"typeString": "literal_string \"红包已抢完\""
															}
														],
														"id": 52,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															171,
															172
														],
														"referencedDeclaration": 172,
														"src": "666:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "666:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "666:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 60,
																	"name": "getBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 47,
																	"src": "722:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 61,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "722:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "737:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "722:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "e7baa2e58c85e4bd99e9a29de5b7b2e7a9ba",
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "740:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_030f8c208df337a8f88f83991116202d39486d3debb6729e017e05a2bbebe76c",
																"typeString": "literal_string \"红包余额已空\""
															},
															"value": "红包余额已空"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_030f8c208df337a8f88f83991116202d39486d3debb6729e017e05a2bbebe76c",
																"typeString": "literal_string \"红包余额已空\""
															}
														],
														"id": 59,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															171,
															172
														],
														"referencedDeclaration": 172,
														"src": "714:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "714:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "714:47:0"
											},
											{
												"assignments": [
													68
												],
												"declarations": [
													{
														"constant": false,
														"id": 68,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 135,
														"src": "772:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 67,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "772:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 71,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 69,
														"name": "getBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "787:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "772:27:0"
											},
											{
												"assignments": [
													73
												],
												"declarations": [
													{
														"constant": false,
														"id": 73,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 135,
														"src": "809:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 72,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "809:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 74,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "809:11:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 75,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "892:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "902:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "892:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 120,
													"nodeType": "Block",
													"src": "952:384:0",
													"statements": [
														{
															"assignments": [
																84
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 84,
																	"name": "random",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 120,
																	"src": "1038:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 83,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1038:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 102,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 90,
																									"name": "block",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 158,
																									"src": "1084:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_block",
																										"typeString": "block"
																									}
																								},
																								"id": 91,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "timestamp",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "1084:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 92,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 168,
																									"src": "1101:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 93,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "1101:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							{
																								"argumentTypes": null,
																								"id": 94,
																								"name": "number",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 5,
																								"src": "1113:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 88,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 155,
																								"src": "1067:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 89,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "1067:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 95,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1067:53:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 87,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 162,
																					"src": "1057:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 96,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1057:64:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 86,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1052:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 85,
																				"name": "uint",
																				"nodeType": "ElementaryTypeName",
																				"src": "1052:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 97,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1052:70:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "3930",
																		"id": 98,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1125:2:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_90_by_1",
																			"typeString": "int_const 90"
																		},
																		"value": "90"
																	},
																	"src": "1052:75:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 100,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1130:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1052:80:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1038:94:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 103,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1155:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 104,
																			"name": "balance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "1164:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 105,
																			"name": "random",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 84,
																			"src": "1174:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1164:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "313030",
																		"id": 107,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1183:3:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "1164:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1155:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 110,
															"nodeType": "ExpressionStatement",
															"src": "1155:31:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 111,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1270:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1280:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1270:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 119,
															"nodeType": "IfStatement",
															"src": "1266:60:0",
															"trueBody": {
																"id": 118,
																"nodeType": "Block",
																"src": "1283:43:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 114,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "1301:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1310:1:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "1301:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 117,
																		"nodeType": "ExpressionStatement",
																		"src": "1301:10:0"
																	}
																]
															}
														}
													]
												},
												"id": 121,
												"nodeType": "IfStatement",
												"src": "888:448:0",
												"trueBody": {
													"id": 82,
													"nodeType": "Block",
													"src": "905:41:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 78,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "919:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 79,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 68,
																	"src": "928:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "919:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 81,
															"nodeType": "ExpressionStatement",
															"src": "919:16:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 127,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "1470:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 122,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "1450:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1450:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1450:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1450:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1450:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "1487:8:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 130,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1487:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 132,
												"nodeType": "ExpressionStatement",
												"src": "1487:8:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1536:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 51,
												"id": 134,
												"nodeType": "Return",
												"src": "1529:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "daa7fd17",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeMoney",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 49,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "649:6:0"
									},
									"scope": 153,
									"src": "612:935:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "1617:102:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 140,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 168,
																	"src": "1635:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1635:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 142,
																"name": "tuhao",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1649:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1635:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "e4bb85e59c9fe8b1aae58fafe99480e6af81e59088e7baa6",
															"id": 144,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1656:26:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e0a121a67d91e681afbac310b047427e66413e7072885758c00d7eb9c3f3ae69",
																"typeString": "literal_string \"仅土豪可销毁合约\""
															},
															"value": "仅土豪可销毁合约"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e0a121a67d91e681afbac310b047427e66413e7072885758c00d7eb9c3f3ae69",
																"typeString": "literal_string \"仅土豪可销毁合约\""
															}
														],
														"id": 139,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															171,
															172
														],
														"referencedDeclaration": 172,
														"src": "1627:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1627:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "1627:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "tuhao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1706:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 147,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1693:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "1693:19:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "41c0e1b5",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "kill",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1607:2:0"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1617:0:0"
									},
									"scope": 153,
									"src": "1594:125:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 154,
							"src": "25:1696:0"
						}
					],
					"src": "0:1722:0"
				},
				"id": 0
			}
		}
	}
}