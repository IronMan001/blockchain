{
	"id": "d13eb5f1dc7351a6e67c903093d5b94e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.1",
	"solcLongVersion": "0.6.1+commit.e6f7d5a4",
	"input": {
		"language": "Solidity",
		"sources": {
			"12-bid.sol": {
				"content": "pragma solidity^0.6.1;\n\ncontract auction {\n    \n    address payable public seller;// 委托人\n    address payable public auctioneer;// 拍卖师\n    // 记录最高出价者地址，最终的买受人\n    address payable public buyer;\n    uint public auctionAmount;//最高金额 \n    //拍卖结束时间点\n    uint auctionEndTime ;\n  \t//拍卖结束标志\n    bool isFinshed;\n    //构造函数\n    constructor(address payable _seller, uint _duration) public {\n        seller = _seller;\n      \tauctioneer = msg.sender;\n      \t//可以设定拍卖结束的时限\n        auctionEndTime = _duration + now;\n        isFinshed = false;\n    }\n    //竞拍 \n    function bid() public payable {\n        require(!isFinshed);//竞拍未结束\n        require(now < auctionEndTime);// 时间限制内\n        require(msg.value > auctionAmount);\n        if (auctionAmount > 0 && address(0) != buyer) {\n            buyer.transfer(auctionAmount);//退钱给上一买家\n        }\n      \t//保留新买家\n        buyer = msg.sender;\n        auctionAmount = msg.value;\n    }\n    //结束竞拍 \n    function auctionEnd() public payable {\n        require(now >= auctionEndTime);//超过竞拍事件后，方可结束\n      \t//竞拍尚未结束\n        require(!isFinshed);\n        isFinshed = true;\n      \t//给卖家打钱\n        seller.transfer(auctionAmount);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"12-bid.sol": {
				"auction": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "_seller",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_duration",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "auctionAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "auctionEnd",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "auctioneer",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "bid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "buyer",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "seller",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"12-bid.sol\":24:1360  contract auction {... */\n  mstore(0x40, 0x80)\n    /* \"12-bid.sol\":403:640  constructor(address payable _seller, uint _duration) public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"12-bid.sol\":403:640  constructor(address payable _seller, uint _duration) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x40\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_2:\n    /* \"12-bid.sol\":403:640  constructor(address payable _seller, uint _duration) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"12-bid.sol\":482:489  _seller */\n  dup2\n    /* \"12-bid.sol\":473:479  seller */\n  0x00\n  dup1\n    /* \"12-bid.sol\":473:489  seller = _seller */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"12-bid.sol\":511:521  msg.sender */\n  caller\n    /* \"12-bid.sol\":498:508  auctioneer */\n  0x01\n  0x00\n    /* \"12-bid.sol\":498:521  auctioneer = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"12-bid.sol\":603:606  now */\n  timestamp\n    /* \"12-bid.sol\":591:600  _duration */\n  dup2\n    /* \"12-bid.sol\":591:606  _duration + now */\n  add\n    /* \"12-bid.sol\":574:588  auctionEndTime */\n  0x04\n    /* \"12-bid.sol\":574:606  auctionEndTime = _duration + now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"12-bid.sol\":628:633  false */\n  0x00\n    /* \"12-bid.sol\":616:625  isFinshed */\n  0x05\n  0x00\n    /* \"12-bid.sol\":616:633  isFinshed = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"12-bid.sol\":403:640  constructor(address payable _seller, uint _duration) public {... */\n  pop\n  pop\n    /* \"12-bid.sol\":24:1360  contract auction {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"12-bid.sol\":24:1360  contract auction {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x08551a53\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x1998aeef\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2a24f46c\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x5ec2c7bf\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7150d8ae\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xdcb5747b\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"12-bid.sol\":52:81  address payable public seller */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"12-bid.sol\":52:81  address payable public seller */\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"12-bid.sol\":659:1063  function bid() public payable {... */\n    tag_3:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"12-bid.sol\":1088:1358  function auctionEnd() public payable {... */\n    tag_4:\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      stop\n        /* \"12-bid.sol\":99:132  address payable public auctioneer */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"12-bid.sol\":99:132  address payable public auctioneer */\n      pop\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"12-bid.sol\":206:234  address payable public buyer */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"12-bid.sol\":206:234  address payable public buyer */\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"12-bid.sol\":240:265  uint public auctionAmount */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"12-bid.sol\":240:265  uint public auctionAmount */\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"12-bid.sol\":52:81  address payable public seller */\n    tag_10:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"12-bid.sol\":659:1063  function bid() public payable {... */\n    tag_12:\n        /* \"12-bid.sol\":708:717  isFinshed */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"12-bid.sol\":707:717  !isFinshed */\n      iszero\n        /* \"12-bid.sol\":699:718  require(!isFinshed) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"12-bid.sol\":759:773  auctionEndTime */\n      sload(0x04)\n        /* \"12-bid.sol\":753:756  now */\n      timestamp\n        /* \"12-bid.sol\":753:773  now < auctionEndTime */\n      lt\n        /* \"12-bid.sol\":745:774  require(now < auctionEndTime) */\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n        /* \"12-bid.sol\":822:835  auctionAmount */\n      sload(0x03)\n        /* \"12-bid.sol\":810:819  msg.value */\n      callvalue\n        /* \"12-bid.sol\":810:835  msg.value > auctionAmount */\n      gt\n        /* \"12-bid.sol\":802:836  require(msg.value > auctionAmount) */\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n        /* \"12-bid.sol\":866:867  0 */\n      0x00\n        /* \"12-bid.sol\":850:863  auctionAmount */\n      sload(0x03)\n        /* \"12-bid.sol\":850:867  auctionAmount > 0 */\n      gt\n        /* \"12-bid.sol\":850:890  auctionAmount > 0 && address(0) != buyer */\n      dup1\n      iszero\n      tag_28\n      jumpi\n      pop\n        /* \"12-bid.sol\":885:890  buyer */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"12-bid.sol\":871:890  address(0) != buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"12-bid.sol\":879:880  0 */\n      0x00\n        /* \"12-bid.sol\":871:890  address(0) != buyer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"12-bid.sol\":850:890  auctionAmount > 0 && address(0) != buyer */\n    tag_28:\n        /* \"12-bid.sol\":846:969  if (auctionAmount > 0 && address(0) != buyer) {... */\n      iszero\n      tag_29\n      jumpi\n        /* \"12-bid.sol\":906:911  buyer */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"12-bid.sol\":906:920  buyer.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"12-bid.sol\":906:935  buyer.transfer(auctionAmount) */\n      0x08fc\n        /* \"12-bid.sol\":921:934  auctionAmount */\n      sload(0x03)\n        /* \"12-bid.sol\":906:935  buyer.transfer(auctionAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"12-bid.sol\":906:935  buyer.transfer(auctionAmount) */\n      pop\n        /* \"12-bid.sol\":846:969  if (auctionAmount > 0 && address(0) != buyer) {... */\n    tag_29:\n        /* \"12-bid.sol\":1011:1021  msg.sender */\n      caller\n        /* \"12-bid.sol\":1003:1008  buyer */\n      0x02\n      0x00\n        /* \"12-bid.sol\":1003:1021  buyer = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"12-bid.sol\":1047:1056  msg.value */\n      callvalue\n        /* \"12-bid.sol\":1031:1044  auctionAmount */\n      0x03\n        /* \"12-bid.sol\":1031:1056  auctionAmount = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"12-bid.sol\":659:1063  function bid() public payable {... */\n      jump\t// out\n        /* \"12-bid.sol\":1088:1358  function auctionEnd() public payable {... */\n    tag_14:\n        /* \"12-bid.sol\":1150:1164  auctionEndTime */\n      sload(0x04)\n        /* \"12-bid.sol\":1143:1146  now */\n      timestamp\n        /* \"12-bid.sol\":1143:1164  now >= auctionEndTime */\n      lt\n      iszero\n        /* \"12-bid.sol\":1135:1165  require(now >= auctionEndTime) */\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n        /* \"12-bid.sol\":1250:1259  isFinshed */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"12-bid.sol\":1249:1259  !isFinshed */\n      iszero\n        /* \"12-bid.sol\":1241:1260  require(!isFinshed) */\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n        /* \"12-bid.sol\":1282:1286  true */\n      0x01\n        /* \"12-bid.sol\":1270:1279  isFinshed */\n      0x05\n      0x00\n        /* \"12-bid.sol\":1270:1286  isFinshed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"12-bid.sol\":1321:1327  seller */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"12-bid.sol\":1321:1336  seller.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"12-bid.sol\":1321:1351  seller.transfer(auctionAmount) */\n      0x08fc\n        /* \"12-bid.sol\":1337:1350  auctionAmount */\n      sload(0x03)\n        /* \"12-bid.sol\":1321:1351  seller.transfer(auctionAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"12-bid.sol\":1321:1351  seller.transfer(auctionAmount) */\n      pop\n        /* \"12-bid.sol\":1088:1358  function auctionEnd() public payable {... */\n      jump\t// out\n        /* \"12-bid.sol\":99:132  address payable public auctioneer */\n    tag_17:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"12-bid.sol\":206:234  address payable public buyer */\n    tag_20:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"12-bid.sol\":240:265  uint public auctionAmount */\n    tag_23:\n      sload(0x03)\n      dup2\n      jump\t// out\n\n    auxdata: 0xa264697066735822122054784481ac12989999a86170165c11d19a69b6d20f0b02b1ae4671c2f09ec05f64736f6c63430006010033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516105513803806105518339818101604052604081101561003357600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055504281016004819055506000600560006101000a81548160ff021916908315150217905550505061044d806101046000396000f3fe6080604052600436106100555760003560e01c806308551a531461005a5780631998aeef146100b15780632a24f46c146100bb5780635ec2c7bf146100c55780637150d8ae1461011c578063dcb5747b14610173575b600080fd5b34801561006657600080fd5b5061006f61019e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b96101c3565b005b6100c3610315565b005b3480156100d157600080fd5b506100da6103c5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012857600080fd5b506101316103eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017f57600080fd5b50610188610411565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900460ff16156101dd57600080fd5b60045442106101eb57600080fd5b60035434116101f957600080fd5b600060035411801561025a5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614155b156102cb57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f193505050501580156102c9573d6000803e3d6000fd5b505b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600381905550565b60045442101561032457600080fd5b600560009054906101000a900460ff161561033e57600080fd5b6001600560006101000a81548160ff0219169083151502179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f193505050501580156103c2573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003548156fea264697066735822122054784481ac12989999a86170165c11d19a69b6d20f0b02b1ae4671c2f09ec05f64736f6c63430006010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x551 CODESIZE SUB DUP1 PUSH2 0x551 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP DUP2 ADD PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x44D DUP1 PUSH2 0x104 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8551A53 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x2A24F46C EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x5EC2C7BF EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xDCB5747B EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE GT PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD GT DUP1 ISZERO PUSH2 0x25A JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2CB JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH25 0x4481AC12989999A86170165C11D19A69B6D20F0B02B1AE4671 0xC2 CREATE SWAP15 0xC0 0x5F PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
							"sourceMap": "24:1336:0:-:0;;;403:237;8:9:-1;5:2;;;30:1;27;20:12;5:2;403:237:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;403:237:0;;;;;;;;;;;;;;;;;;;;;;;;;482:7;473:6;;:16;;;;;;;;;;;;;;;;;;511:10;498;;:23;;;;;;;;;;;;;;;;;;603:3;591:9;:15;574:14;:32;;;;628:5;616:9;;:17;;;;;;;;;;;;;;;;;;403:237;;24:1336;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100555760003560e01c806308551a531461005a5780631998aeef146100b15780632a24f46c146100bb5780635ec2c7bf146100c55780637150d8ae1461011c578063dcb5747b14610173575b600080fd5b34801561006657600080fd5b5061006f61019e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100b96101c3565b005b6100c3610315565b005b3480156100d157600080fd5b506100da6103c5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561012857600080fd5b506101316103eb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561017f57600080fd5b50610188610411565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900460ff16156101dd57600080fd5b60045442106101eb57600080fd5b60035434116101f957600080fd5b600060035411801561025a5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff1614155b156102cb57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f193505050501580156102c9573d6000803e3d6000fd5b505b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600381905550565b60045442101561032457600080fd5b600560009054906101000a900460ff161561033e57600080fd5b6001600560006101000a81548160ff0219169083151502179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6003549081150290604051600060405180830381858888f193505050501580156103c2573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003548156fea264697066735822122054784481ac12989999a86170165c11d19a69b6d20f0b02b1ae4671c2f09ec05f64736f6c63430006010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x55 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8551A53 EQ PUSH2 0x5A JUMPI DUP1 PUSH4 0x1998AEEF EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x2A24F46C EQ PUSH2 0xBB JUMPI DUP1 PUSH4 0x5EC2C7BF EQ PUSH2 0xC5 JUMPI DUP1 PUSH4 0x7150D8AE EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0xDCB5747B EQ PUSH2 0x173 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6F PUSH2 0x19E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB9 PUSH2 0x1C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC3 PUSH2 0x315 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDA PUSH2 0x3C5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x128 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x131 PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x411 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT PUSH2 0x1EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SLOAD CALLVALUE GT PUSH2 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD GT DUP1 ISZERO PUSH2 0x25A JUMPI POP PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x2CB JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2C9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD TIMESTAMP LT ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x3 SLOAD SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x3C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD PUSH25 0x4481AC12989999A86170165C11D19A69B6D20F0B02B1AE4671 0xC2 CREATE SWAP15 0xC0 0x5F PUSH5 0x736F6C6343 STOP MOD ADD STOP CALLER ",
							"sourceMap": "24:1336:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;52:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52:29:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;659:404;;;:::i;:::-;;1088:270;;;:::i;:::-;;99:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;99:33:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;206:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;206:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;240:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;240:25:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;52:29;;;;;;;;;;;;;:::o;659:404::-;708:9;;;;;;;;;;;707:10;699:19;;;;;;759:14;;753:3;:20;745:29;;;;;;822:13;;810:9;:25;802:34;;;;;;866:1;850:13;;:17;:40;;;;;885:5;;;;;;;;;;;871:19;;879:1;871:19;;;;850:40;846:123;;;906:5;;;;;;;;;;;:14;;:29;921:13;;906:29;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;906:29:0;846:123;1011:10;1003:5;;:18;;;;;;;;;;;;;;;;;;1047:9;1031:13;:25;;;;659:404::o;1088:270::-;1150:14;;1143:3;:21;;1135:30;;;;;;1250:9;;;;;;;;;;;1249:10;1241:19;;;;;;1282:4;1270:9;;:16;;;;;;;;;;;;;;;;;;1321:6;;;;;;;;;;;:15;;:30;1337:13;;1321:30;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1321:30:0;1088:270::o;99:33::-;;;;;;;;;;;;;:::o;206:28::-;;;;;;;;;;;;;:::o;240:25::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "220200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"auctionAmount()": "1093",
								"auctionEnd()": "infinite",
								"auctioneer()": "1097",
								"bid()": "infinite",
								"buyer()": "1119",
								"seller()": "1031"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24,
									"end": 1360,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 24,
									"end": 1360,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 24,
									"end": 1360,
									"name": "MSTORE"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "POP"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "MLOAD"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "PUSHSIZE"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "CODESIZE"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SUB"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "DUP1"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "PUSHSIZE"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "DUP4"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "CODECOPY"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "DUP2"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "DUP2"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "ADD"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "DUP2"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "ADD"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SWAP1"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "DUP1"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "DUP1"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "MLOAD"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SWAP1"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "ADD"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SWAP1"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SWAP3"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SWAP2"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SWAP1"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "DUP1"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "MLOAD"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SWAP1"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "ADD"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SWAP1"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SWAP3"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SWAP2"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "SWAP1"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "POP"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "POP"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "POP"
								},
								{
									"begin": 482,
									"end": 489,
									"name": "DUP2"
								},
								{
									"begin": 473,
									"end": 479,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP1"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "EXP"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "DUP2"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "SLOAD"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "DUP2"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "MUL"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "NOT"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "AND"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "SWAP1"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "DUP4"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "AND"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "MUL"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "OR"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "SWAP1"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "SSTORE"
								},
								{
									"begin": 473,
									"end": 489,
									"name": "POP"
								},
								{
									"begin": 511,
									"end": 521,
									"name": "CALLER"
								},
								{
									"begin": 498,
									"end": 508,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 498,
									"end": 508,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "EXP"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "DUP2"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "SLOAD"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "DUP2"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "MUL"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "NOT"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "AND"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "SWAP1"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "DUP4"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "AND"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "MUL"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "OR"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "SWAP1"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "SSTORE"
								},
								{
									"begin": 498,
									"end": 521,
									"name": "POP"
								},
								{
									"begin": 603,
									"end": 606,
									"name": "TIMESTAMP"
								},
								{
									"begin": 591,
									"end": 600,
									"name": "DUP2"
								},
								{
									"begin": 591,
									"end": 606,
									"name": "ADD"
								},
								{
									"begin": 574,
									"end": 588,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 574,
									"end": 606,
									"name": "DUP2"
								},
								{
									"begin": 574,
									"end": 606,
									"name": "SWAP1"
								},
								{
									"begin": 574,
									"end": 606,
									"name": "SSTORE"
								},
								{
									"begin": 574,
									"end": 606,
									"name": "POP"
								},
								{
									"begin": 628,
									"end": 633,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 616,
									"end": 625,
									"name": "PUSH",
									"value": "5"
								},
								{
									"begin": 616,
									"end": 625,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "EXP"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "DUP2"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "SLOAD"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "DUP2"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "MUL"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "NOT"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "AND"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "SWAP1"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "DUP4"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "ISZERO"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "ISZERO"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "MUL"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "OR"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "SWAP1"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "SSTORE"
								},
								{
									"begin": 616,
									"end": 633,
									"name": "POP"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "POP"
								},
								{
									"begin": 403,
									"end": 640,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 1360,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 1360,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 1360,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 1360,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 1360,
									"name": "CODECOPY"
								},
								{
									"begin": 24,
									"end": 1360,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 1360,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054784481ac12989999a86170165c11d19a69b6d20f0b02b1ae4671c2f09ec05f64736f6c63430006010033",
									".code": [
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "MSTORE"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "LT"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "SHR"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "8551A53"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "1998AEEF"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "2A24F46C"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "5EC2C7BF"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "7150D8AE"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "DCB5747B"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1360,
											"name": "REVERT"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "JUMPDEST"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "JUMPDEST"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "MLOAD"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "DUP3"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "AND"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "AND"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "ADD"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "SWAP2"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "MLOAD"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "SWAP2"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "SUB"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "SWAP1"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "RETURN"
										},
										{
											"begin": 659,
											"end": 1063,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 659,
											"end": 1063,
											"name": "JUMPDEST"
										},
										{
											"begin": 659,
											"end": 1063,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 659,
											"end": 1063,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 659,
											"end": 1063,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 659,
											"end": 1063,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 659,
											"end": 1063,
											"name": "JUMPDEST"
										},
										{
											"begin": 659,
											"end": 1063,
											"name": "STOP"
										},
										{
											"begin": 1088,
											"end": 1358,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1088,
											"end": 1358,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1358,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 1088,
											"end": 1358,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1088,
											"end": 1358,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1088,
											"end": 1358,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1088,
											"end": 1358,
											"name": "JUMPDEST"
										},
										{
											"begin": 1088,
											"end": 1358,
											"name": "STOP"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "POP"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "MLOAD"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "DUP3"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "AND"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "AND"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "DUP2"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "MSTORE"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "ADD"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "SWAP2"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "POP"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "POP"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "MLOAD"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "SWAP2"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "SUB"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "RETURN"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "JUMPDEST"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "JUMPDEST"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "MLOAD"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "DUP3"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "AND"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "AND"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "DUP2"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "MSTORE"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "ADD"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "SWAP2"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "POP"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "MLOAD"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "DUP1"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "SWAP2"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "SUB"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "SWAP1"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "RETURN"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "JUMPDEST"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "POP"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "JUMPDEST"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "MLOAD"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "DUP1"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "DUP3"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "DUP2"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "MSTORE"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "ADD"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "SWAP2"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "POP"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "POP"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "MLOAD"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "DUP1"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "SWAP2"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "SUB"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "RETURN"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "JUMPDEST"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "SWAP1"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "SLOAD"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "SWAP1"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "EXP"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "SWAP1"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "DIV"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "AND"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "DUP2"
										},
										{
											"begin": 52,
											"end": 81,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 659,
											"end": 1063,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 659,
											"end": 1063,
											"name": "JUMPDEST"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "SWAP1"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "SLOAD"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "SWAP1"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "EXP"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "SWAP1"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "DIV"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 708,
											"end": 717,
											"name": "AND"
										},
										{
											"begin": 707,
											"end": 717,
											"name": "ISZERO"
										},
										{
											"begin": 699,
											"end": 718,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 699,
											"end": 718,
											"name": "JUMPI"
										},
										{
											"begin": 699,
											"end": 718,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 699,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 699,
											"end": 718,
											"name": "REVERT"
										},
										{
											"begin": 699,
											"end": 718,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 699,
											"end": 718,
											"name": "JUMPDEST"
										},
										{
											"begin": 759,
											"end": 773,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 759,
											"end": 773,
											"name": "SLOAD"
										},
										{
											"begin": 753,
											"end": 756,
											"name": "TIMESTAMP"
										},
										{
											"begin": 753,
											"end": 773,
											"name": "LT"
										},
										{
											"begin": 745,
											"end": 774,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 745,
											"end": 774,
											"name": "JUMPI"
										},
										{
											"begin": 745,
											"end": 774,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 745,
											"end": 774,
											"name": "DUP1"
										},
										{
											"begin": 745,
											"end": 774,
											"name": "REVERT"
										},
										{
											"begin": 745,
											"end": 774,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 745,
											"end": 774,
											"name": "JUMPDEST"
										},
										{
											"begin": 822,
											"end": 835,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 822,
											"end": 835,
											"name": "SLOAD"
										},
										{
											"begin": 810,
											"end": 819,
											"name": "CALLVALUE"
										},
										{
											"begin": 810,
											"end": 835,
											"name": "GT"
										},
										{
											"begin": 802,
											"end": 836,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 802,
											"end": 836,
											"name": "JUMPI"
										},
										{
											"begin": 802,
											"end": 836,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 802,
											"end": 836,
											"name": "DUP1"
										},
										{
											"begin": 802,
											"end": 836,
											"name": "REVERT"
										},
										{
											"begin": 802,
											"end": 836,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 802,
											"end": 836,
											"name": "JUMPDEST"
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 850,
											"end": 863,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 850,
											"end": 863,
											"name": "SLOAD"
										},
										{
											"begin": 850,
											"end": 867,
											"name": "GT"
										},
										{
											"begin": 850,
											"end": 890,
											"name": "DUP1"
										},
										{
											"begin": 850,
											"end": 890,
											"name": "ISZERO"
										},
										{
											"begin": 850,
											"end": 890,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 850,
											"end": 890,
											"name": "JUMPI"
										},
										{
											"begin": 850,
											"end": 890,
											"name": "POP"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "SWAP1"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "SLOAD"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "SWAP1"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "EXP"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "SWAP1"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "DIV"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 890,
											"name": "AND"
										},
										{
											"begin": 871,
											"end": 890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 890,
											"name": "AND"
										},
										{
											"begin": 879,
											"end": 880,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 871,
											"end": 890,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 871,
											"end": 890,
											"name": "AND"
										},
										{
											"begin": 871,
											"end": 890,
											"name": "EQ"
										},
										{
											"begin": 871,
											"end": 890,
											"name": "ISZERO"
										},
										{
											"begin": 850,
											"end": 890,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 850,
											"end": 890,
											"name": "JUMPDEST"
										},
										{
											"begin": 846,
											"end": 969,
											"name": "ISZERO"
										},
										{
											"begin": 846,
											"end": 969,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 846,
											"end": 969,
											"name": "JUMPI"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "SWAP1"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "SLOAD"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "SWAP1"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "EXP"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "SWAP1"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "DIV"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 906,
											"end": 911,
											"name": "AND"
										},
										{
											"begin": 906,
											"end": 920,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 906,
											"end": 920,
											"name": "AND"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 921,
											"end": 934,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 921,
											"end": 934,
											"name": "SLOAD"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "SWAP1"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "ISZERO"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "MUL"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "SWAP1"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "MLOAD"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "DUP4"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "SUB"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "DUP2"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "DUP6"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "DUP9"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "DUP9"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "CALL"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "SWAP4"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 906,
											"end": 935,
											"name": "POP"
										},
										{
											"begin": 846,
											"end": 969,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 846,
											"end": 969,
											"name": "JUMPDEST"
										},
										{
											"begin": 1011,
											"end": 1021,
											"name": "CALLER"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "EXP"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "DUP2"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "SLOAD"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "DUP2"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "MUL"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "NOT"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "AND"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "SWAP1"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "DUP4"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "AND"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "MUL"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "OR"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "SWAP1"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "SSTORE"
										},
										{
											"begin": 1003,
											"end": 1021,
											"name": "POP"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "CALLVALUE"
										},
										{
											"begin": 1031,
											"end": 1044,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "DUP2"
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "SWAP1"
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "SSTORE"
										},
										{
											"begin": 1031,
											"end": 1056,
											"name": "POP"
										},
										{
											"begin": 659,
											"end": 1063,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1088,
											"end": 1358,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1088,
											"end": 1358,
											"name": "JUMPDEST"
										},
										{
											"begin": 1150,
											"end": 1164,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1150,
											"end": 1164,
											"name": "SLOAD"
										},
										{
											"begin": 1143,
											"end": 1146,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1143,
											"end": 1164,
											"name": "LT"
										},
										{
											"begin": 1143,
											"end": 1164,
											"name": "ISZERO"
										},
										{
											"begin": 1135,
											"end": 1165,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1135,
											"end": 1165,
											"name": "JUMPI"
										},
										{
											"begin": 1135,
											"end": 1165,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1135,
											"end": 1165,
											"name": "DUP1"
										},
										{
											"begin": 1135,
											"end": 1165,
											"name": "REVERT"
										},
										{
											"begin": 1135,
											"end": 1165,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1135,
											"end": 1165,
											"name": "JUMPDEST"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "SLOAD"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "EXP"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "SWAP1"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "DIV"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "AND"
										},
										{
											"begin": 1249,
											"end": 1259,
											"name": "ISZERO"
										},
										{
											"begin": 1241,
											"end": 1260,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 1241,
											"end": 1260,
											"name": "JUMPI"
										},
										{
											"begin": 1241,
											"end": 1260,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1260,
											"name": "DUP1"
										},
										{
											"begin": 1241,
											"end": 1260,
											"name": "REVERT"
										},
										{
											"begin": 1241,
											"end": 1260,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 1241,
											"end": 1260,
											"name": "JUMPDEST"
										},
										{
											"begin": 1282,
											"end": 1286,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1270,
											"end": 1279,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "EXP"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "DUP2"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "SLOAD"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "DUP2"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "MUL"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "NOT"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "AND"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "SWAP1"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "DUP4"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "ISZERO"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "ISZERO"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "MUL"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "OR"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "SWAP1"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "SSTORE"
										},
										{
											"begin": 1270,
											"end": 1286,
											"name": "POP"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "SWAP1"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "SLOAD"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "SWAP1"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "EXP"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "SWAP1"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "DIV"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "AND"
										},
										{
											"begin": 1321,
											"end": 1336,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1321,
											"end": 1336,
											"name": "AND"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1337,
											"end": 1350,
											"name": "SLOAD"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "SWAP1"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "DUP2"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "ISZERO"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "MUL"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "SWAP1"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "MLOAD"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "MLOAD"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "DUP1"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "DUP4"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "SUB"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "DUP2"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "DUP6"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "DUP9"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "DUP9"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "CALL"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "SWAP4"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1321,
											"end": 1351,
											"name": "POP"
										},
										{
											"begin": 1088,
											"end": 1358,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "SLOAD"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "EXP"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "DIV"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "AND"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "DUP2"
										},
										{
											"begin": 99,
											"end": 132,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "JUMPDEST"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "SWAP1"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "SLOAD"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "SWAP1"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "EXP"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "SWAP1"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "DIV"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "AND"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "DUP2"
										},
										{
											"begin": 206,
											"end": 234,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "JUMPDEST"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "SLOAD"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "DUP2"
										},
										{
											"begin": 240,
											"end": 265,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"auctionAmount()": "dcb5747b",
							"auctionEnd()": "2a24f46c",
							"auctioneer()": "5ec2c7bf",
							"bid()": "1998aeef",
							"buyer()": "7150d8ae",
							"seller()": "08551a53"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"auctionAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionEnd\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctioneer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyer\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"seller\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"12-bid.sol\":\"auction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"12-bid.sol\":{\"keccak256\":\"0xc703734d1f90c4a689dd00b52a45cf218176754a2eba5012fc0bf7a56bfd92cd\",\"urls\":[\"bzz-raw://019501b58182a48d19e2da80c245a91ddb2305ffbce0eb981d01d35c20fb4e1f\",\"dweb:/ipfs/QmdABeJSLiQiB4AB1F1CH36RjHLBAo12JAwAMqxZo8qCZE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "12-bid.sol:auction",
								"label": "seller",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "12-bid.sol:auction",
								"label": "auctioneer",
								"offset": 0,
								"slot": "1",
								"type": "t_address_payable"
							},
							{
								"astId": 7,
								"contract": "12-bid.sol:auction",
								"label": "buyer",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 9,
								"contract": "12-bid.sol:auction",
								"label": "auctionAmount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 11,
								"contract": "12-bid.sol:auction",
								"label": "auctionEndTime",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 13,
								"contract": "12-bid.sol:auction",
								"label": "isFinshed",
								"offset": 0,
								"slot": "5",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"12-bid.sol": {
				"ast": {
					"absolutePath": "12-bid.sol",
					"exportedSymbols": {
						"auction": [
							116
						]
					},
					"id": 117,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 116,
							"linearizedBaseContracts": [
								116
							],
							"name": "auction",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "08551a53",
									"id": 3,
									"name": "seller",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 116,
									"src": "52:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "52:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5ec2c7bf",
									"id": 5,
									"name": "auctioneer",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 116,
									"src": "99:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 4,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "99:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7150d8ae",
									"id": 7,
									"name": "buyer",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 116,
									"src": "206:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "206:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "dcb5747b",
									"id": 9,
									"name": "auctionAmount",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 116,
									"src": "240:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "240:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "auctionEndTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 116,
									"src": "314:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "314:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"name": "isFinshed",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 116,
									"src": "364:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 12,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "364:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "463:177:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 20,
														"name": "seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "473:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 21,
														"name": "_seller",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "482:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "473:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "473:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 24,
														"name": "auctioneer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "498:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 25,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "511:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 26,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "511:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "498:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "498:23:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 29,
														"name": "auctionEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "574:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 30,
															"name": "_duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "591:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 31,
															"name": "now",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "603:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "591:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "574:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "574:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 35,
														"name": "isFinshed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "616:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "628:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "616:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "616:17:0"
											}
										]
									},
									"documentation": null,
									"id": 40,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "_seller",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "415:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"name": "_duration",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 40,
												"src": "440:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "440:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "414:41:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "463:0:0"
									},
									"scope": 116,
									"src": "403:237:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "689:374:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "707:10:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 44,
																"name": "isFinshed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "708:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 43,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															134,
															135
														],
														"referencedDeclaration": 134,
														"src": "699:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "699:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "699:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 49,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "753:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 50,
																"name": "auctionEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "759:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "753:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															134,
															135
														],
														"referencedDeclaration": 134,
														"src": "745:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "745:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "745:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 55,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 131,
																	"src": "810:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 56,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "810:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 57,
																"name": "auctionAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 9,
																"src": "822:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "810:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 54,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															134,
															135
														],
														"referencedDeclaration": 134,
														"src": "802:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "802:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "802:34:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 63,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 61,
															"name": "auctionAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "850:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "866:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "850:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 66,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "879:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 65,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "871:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 64,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "871:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "871:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 68,
															"name": "buyer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "885:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"src": "871:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "850:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 78,
												"nodeType": "IfStatement",
												"src": "846:123:0",
												"trueBody": {
													"id": 77,
													"nodeType": "Block",
													"src": "892:77:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 74,
																		"name": "auctionAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "921:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 71,
																		"name": "buyer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 7,
																		"src": "906:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 73,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "906:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "906:29:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 76,
															"nodeType": "ExpressionStatement",
															"src": "906:29:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 79,
														"name": "buyer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1003:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 80,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "1011:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1011:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1003:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "1003:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 84,
														"name": "auctionAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1031:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 85,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "1047:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1047:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1031:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1031:25:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1998aeef",
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "bid",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "671:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "689:0:0"
									},
									"scope": 116,
									"src": "659:404:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "1125:233:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 94,
																"name": "now",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "1143:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 95,
																"name": "auctionEndTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1150:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1143:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 93,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															134,
															135
														],
														"referencedDeclaration": 134,
														"src": "1135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1135:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 98,
												"nodeType": "ExpressionStatement",
												"src": "1135:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1249:10:0",
															"subExpression": {
																"argumentTypes": null,
																"id": 100,
																"name": "isFinshed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "1250:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 99,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															134,
															135
														],
														"referencedDeclaration": 134,
														"src": "1241:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1241:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1241:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "isFinshed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1270:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1282:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1270:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1270:16:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 111,
															"name": "auctionAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1337:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 108,
															"name": "seller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1321:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1321:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1321:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1321:30:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2a24f46c",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "auctionEnd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1107:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1125:0:0"
									},
									"scope": 116,
									"src": "1088:270:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 117,
							"src": "24:1336:0"
						}
					],
					"src": "0:1360:0"
				},
				"id": 0
			}
		}
	}
}