{
	"id": "b528ee0b2752bb495e2919ba2657ed88",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.1",
	"solcLongVersion": "0.6.1+commit.e6f7d5a4",
	"input": {
		"language": "Solidity",
		"sources": {
			"11-redpacket.sol": {
				"content": "pragma solidity^0.6.1;\n\ncontract redpacket {\n    address payable public tuhao;//定义土豪 \n    uint public number ;// 红包数量\n  \t//构造函数，需要携带msg.values\n    constructor(uint _number) payable public {\n        tuhao = msg.sender;//谁创建谁就是土豪\n        number = _number;//指定红包数量\n    }\n    //获取余额\n    function getBalance() public view returns (uint) {\n        return address(this).balance;\n    }\n    //抢红包 \n    function stakeMoney() public payable returns (bool) {\n        require(number > 0);//剩余红包必须大于0\n        require(getBalance() > 0); // 判断余额>0 \n        number --;//剩余红包数减1\n      \t//抢到红包的金额采用随机的方式，random是100以内的随机数\n        // uint random = uint(keccak256(abi.encode(now,msg.sender,\"tuhao\"))) % 100;\n        // uint random = uint(keccak256(abi.encodePacked(block.timestamp, msg.sender, \"tuhao\"))) % 100;\n        uint random = 10;\n        uint balance = getBalance();\n      \t//打给抢红包的人\n        msg.sender.transfer(balance * random / 100 );\n        return true;\n    }\n    \n    //合约销毁 \n    function kill() public {\n        require(msg.sender == tuhao);\n        selfdestruct(tuhao);//销毁合约，tuhao为受益人\n    }\n    \n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"11-redpacket.sol": {
				"redpacket": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_number",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "number",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeMoney",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tuhao",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"11-redpacket.sol\":24:1288  contract redpacket {... */\n  mstore(0x40, 0x80)\n    /* \"11-redpacket.sol\":181:329  constructor(uint _number) payable public {... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"11-redpacket.sol\":181:329  constructor(uint _number) payable public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"11-redpacket.sol\":240:250  msg.sender */\n  caller\n    /* \"11-redpacket.sol\":232:237  tuhao */\n  0x00\n  dup1\n    /* \"11-redpacket.sol\":232:250  tuhao = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"11-redpacket.sol\":295:302  _number */\n  dup1\n    /* \"11-redpacket.sol\":286:292  number */\n  0x01\n    /* \"11-redpacket.sol\":286:302  number = _number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"11-redpacket.sol\":181:329  constructor(uint _number) payable public {... */\n  pop\n    /* \"11-redpacket.sol\":24:1288  contract redpacket {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"11-redpacket.sol\":24:1288  contract redpacket {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x41c0e1b5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6878dfa4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8381f58a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xdaa7fd17\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"11-redpacket.sol\":353:447  function getBalance() public view returns (uint) {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"11-redpacket.sol\":353:447  function getBalance() public view returns (uint) {... */\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"11-redpacket.sol\":1150:1281  function kill() public {... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"11-redpacket.sol\":1150:1281  function kill() public {... */\n      pop\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      stop\n        /* \"11-redpacket.sol\":49:77  address payable public tuhao */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"11-redpacket.sol\":49:77  address payable public tuhao */\n      pop\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"11-redpacket.sol\":98:116  uint public number */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_16:\n        /* \"11-redpacket.sol\":98:116  uint public number */\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"11-redpacket.sol\":469:1120  function stakeMoney() public payable returns (bool) {... */\n    tag_6:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"11-redpacket.sol\":353:447  function getBalance() public view returns (uint) {... */\n    tag_9:\n        /* \"11-redpacket.sol\":396:400  uint */\n      0x00\n        /* \"11-redpacket.sol\":419:440  address(this).balance */\n      selfbalance\n        /* \"11-redpacket.sol\":412:440  return address(this).balance */\n      swap1\n      pop\n        /* \"11-redpacket.sol\":353:447  function getBalance() public view returns (uint) {... */\n      swap1\n      jump\t// out\n        /* \"11-redpacket.sol\":1150:1281  function kill() public {... */\n    tag_12:\n        /* \"11-redpacket.sol\":1205:1210  tuhao */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"11-redpacket.sol\":1191:1210  msg.sender == tuhao */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"11-redpacket.sol\":1191:1201  msg.sender */\n      caller\n        /* \"11-redpacket.sol\":1191:1210  msg.sender == tuhao */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"11-redpacket.sol\":1183:1211  require(msg.sender == tuhao) */\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n        /* \"11-redpacket.sol\":1234:1239  tuhao */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"11-redpacket.sol\":1221:1240  selfdestruct(tuhao) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"11-redpacket.sol\":49:77  address payable public tuhao */\n    tag_15:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"11-redpacket.sol\":98:116  uint public number */\n    tag_18:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"11-redpacket.sol\":469:1120  function stakeMoney() public payable returns (bool) {... */\n    tag_20:\n        /* \"11-redpacket.sol\":515:519  bool */\n      0x00\n        /* \"11-redpacket.sol\":548:549  0 */\n      dup1\n        /* \"11-redpacket.sol\":539:545  number */\n      sload(0x01)\n        /* \"11-redpacket.sol\":539:549  number > 0 */\n      gt\n        /* \"11-redpacket.sol\":531:550  require(number > 0) */\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n        /* \"11-redpacket.sol\":610:611  0 */\n      0x00\n        /* \"11-redpacket.sol\":595:607  getBalance() */\n      tag_26\n        /* \"11-redpacket.sol\":595:605  getBalance */\n      tag_9\n        /* \"11-redpacket.sol\":595:607  getBalance() */\n      jump\t// in\n    tag_26:\n        /* \"11-redpacket.sol\":595:611  getBalance() > 0 */\n      gt\n        /* \"11-redpacket.sol\":587:612  require(getBalance() > 0) */\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n        /* \"11-redpacket.sol\":641:647  number */\n      0x01\n      0x00\n        /* \"11-redpacket.sol\":641:650  number -- */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"11-redpacket.sol\":954:965  uint random */\n      0x00\n        /* \"11-redpacket.sol\":968:970  10 */\n      0x0a\n        /* \"11-redpacket.sol\":954:970  uint random = 10 */\n      swap1\n      pop\n        /* \"11-redpacket.sol\":980:992  uint balance */\n      0x00\n        /* \"11-redpacket.sol\":995:1007  getBalance() */\n      tag_28\n        /* \"11-redpacket.sol\":995:1005  getBalance */\n      tag_9\n        /* \"11-redpacket.sol\":995:1007  getBalance() */\n      jump\t// in\n    tag_28:\n        /* \"11-redpacket.sol\":980:1007  uint balance = getBalance() */\n      swap1\n      pop\n        /* \"11-redpacket.sol\":1048:1058  msg.sender */\n      caller\n        /* \"11-redpacket.sol\":1048:1067  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"11-redpacket.sol\":1048:1092  msg.sender.transfer(balance * random / 100 ) */\n      0x08fc\n        /* \"11-redpacket.sol\":1087:1090  100 */\n      0x64\n        /* \"11-redpacket.sol\":1078:1084  random */\n      dup5\n        /* \"11-redpacket.sol\":1068:1075  balance */\n      dup5\n        /* \"11-redpacket.sol\":1068:1084  balance * random */\n      mul\n        /* \"11-redpacket.sol\":1068:1090  balance * random / 100 */\n      dup2\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      div\n        /* \"11-redpacket.sol\":1048:1092  msg.sender.transfer(balance * random / 100 ) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_31:\n        /* \"11-redpacket.sol\":1048:1092  msg.sender.transfer(balance * random / 100 ) */\n      pop\n        /* \"11-redpacket.sol\":1109:1113  true */\n      0x01\n        /* \"11-redpacket.sol\":1102:1113  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"11-redpacket.sol\":469:1120  function stakeMoney() public payable returns (bool) {... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204974239004b6974425c074f043485c0894b5e7eaa5a84b6b34b97cb6489948c964736f6c63430006010033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526040516103643803806103648339818101604052602081101561002657600080fd5b8101908080519060200190929190505050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600181905550506102d68061008e6000396000f3fe60806040526004361061004a5760003560e01c806312065fe01461004f57806341c0e1b51461007a5780636878dfa4146100915780638381f58a146100e8578063daa7fd1714610113575b600080fd5b34801561005b57600080fd5b50610064610135565b6040518082815260200191505060405180910390f35b34801561008657600080fd5b5061008f61013d565b005b34801561009d57600080fd5b506100a66101d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100f457600080fd5b506100fd6101f5565b6040518082815260200191505060405180910390f35b61011b6101fb565b604051808215151515815260200191505060405180910390f35b600047905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019657600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000806001541161020b57600080fd5b6000610215610135565b1161021f57600080fd5b600160008154809291906001900391905055506000600a90506000610242610135565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc60648484028161026a57fe5b049081150290604051600060405180830381858888f19350505050158015610296573d6000803e3d6000fd5b506001925050509056fea26469706673582212204974239004b6974425c074f043485c0894b5e7eaa5a84b6b34b97cb6489948c964736f6c63430006010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x364 CODESIZE SUB DUP1 PUSH2 0x364 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP POP PUSH2 0x2D6 DUP1 PUSH2 0x8E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x6878DFA4 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x8381F58A EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xDAA7FD17 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0x13D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x215 PUSH2 0x135 JUMP JUMPDEST GT PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0xA SWAP1 POP PUSH1 0x0 PUSH2 0x242 PUSH2 0x135 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x64 DUP5 DUP5 MUL DUP2 PUSH2 0x26A JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x296 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 PUSH21 0x239004B6974425C074F043485C0894B5E7EAA5A84B PUSH12 0x34B97CB6489948C964736F6C PUSH4 0x43000601 STOP CALLER ",
							"sourceMap": "24:1264:0:-:0;;;181:148;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;181:148:0;;;;;;;;;;;;;;;;240:10;232:5;;:18;;;;;;;;;;;;;;;;;;295:7;286:6;:16;;;;181:148;24:1264;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c806312065fe01461004f57806341c0e1b51461007a5780636878dfa4146100915780638381f58a146100e8578063daa7fd1714610113575b600080fd5b34801561005b57600080fd5b50610064610135565b6040518082815260200191505060405180910390f35b34801561008657600080fd5b5061008f61013d565b005b34801561009d57600080fd5b506100a66101d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100f457600080fd5b506100fd6101f5565b6040518082815260200191505060405180910390f35b61011b6101fb565b604051808215151515815260200191505060405180910390f35b600047905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461019657600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b6000806001541161020b57600080fd5b6000610215610135565b1161021f57600080fd5b600160008154809291906001900391905055506000600a90506000610242610135565b90503373ffffffffffffffffffffffffffffffffffffffff166108fc60648484028161026a57fe5b049081150290604051600060405180830381858888f19350505050158015610296573d6000803e3d6000fd5b506001925050509056fea26469706673582212204974239004b6974425c074f043485c0894b5e7eaa5a84b6b34b97cb6489948c964736f6c63430006010033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x6878DFA4 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0x8381F58A EQ PUSH2 0xE8 JUMPI DUP1 PUSH4 0xDAA7FD17 EQ PUSH2 0x113 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x135 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8F PUSH2 0x13D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA6 PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFD PUSH2 0x1F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11B PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SELFBALANCE SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x196 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 SLOAD GT PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x215 PUSH2 0x135 JUMP JUMPDEST GT PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0xA SWAP1 POP PUSH1 0x0 PUSH2 0x242 PUSH2 0x135 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH1 0x64 DUP5 DUP5 MUL DUP2 PUSH2 0x26A JUMPI INVALID JUMPDEST DIV SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x296 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 SWAP3 POP POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 PUSH21 0x239004B6974425C074F043485C0894B5E7EAA5A84B PUSH12 0x34B97CB6489948C964736F6C PUSH4 0x43000601 STOP CALLER ",
							"sourceMap": "24:1264:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;353:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;353:94:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1150:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1150:131:0;;;:::i;:::-;;49:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;49:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;98:18;;8:9:-1;5:2;;;30:1;27;20:12;5:2;98:18:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;469:651;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;353:94;396:4;419:21;412:28;;353:94;:::o;1150:131::-;1205:5;;;;;;;;;;;1191:19;;:10;:19;;;1183:28;;;;;;1234:5;;;;;;;;;;;1221:19;;;49:28;;;;;;;;;;;;;:::o;98:18::-;;;;:::o;469:651::-;515:4;548:1;539:6;;:10;531:19;;;;;;610:1;595:12;:10;:12::i;:::-;:16;587:25;;;;;;641:6;;:9;;;;;;;;;;;;;;954:11;968:2;954:16;;980:12;995;:10;:12::i;:::-;980:27;;1048:10;:19;;:44;1087:3;1078:6;1068:7;:16;:22;;;;;;1048:44;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1048:44:0;1109:4;1102:11;;;;469:651;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "145200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getBalance()": "193",
								"kill()": "31850",
								"number()": "1049",
								"stakeMoney()": "infinite",
								"tuhao()": "1075"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24,
									"end": 1288,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 24,
									"end": 1288,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 24,
									"end": 1288,
									"name": "MSTORE"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "MLOAD"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "PUSHSIZE"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "CODESIZE"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "SUB"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "DUP1"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "PUSHSIZE"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "DUP4"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "CODECOPY"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "DUP2"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "DUP2"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "ADD"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "DUP2"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "ADD"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "SWAP1"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "DUP1"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "DUP1"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "MLOAD"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "SWAP1"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "ADD"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "SWAP1"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "SWAP3"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "SWAP2"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "SWAP1"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "POP"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "POP"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "POP"
								},
								{
									"begin": 240,
									"end": 250,
									"name": "CALLER"
								},
								{
									"begin": 232,
									"end": 237,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 232,
									"end": 237,
									"name": "DUP1"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "EXP"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "DUP2"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "SLOAD"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "DUP2"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "MUL"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "NOT"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "AND"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "SWAP1"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "DUP4"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "AND"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "MUL"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "OR"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "SWAP1"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "SSTORE"
								},
								{
									"begin": 232,
									"end": 250,
									"name": "POP"
								},
								{
									"begin": 295,
									"end": 302,
									"name": "DUP1"
								},
								{
									"begin": 286,
									"end": 292,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 286,
									"end": 302,
									"name": "DUP2"
								},
								{
									"begin": 286,
									"end": 302,
									"name": "SWAP1"
								},
								{
									"begin": 286,
									"end": 302,
									"name": "SSTORE"
								},
								{
									"begin": 286,
									"end": 302,
									"name": "POP"
								},
								{
									"begin": 181,
									"end": 329,
									"name": "POP"
								},
								{
									"begin": 24,
									"end": 1288,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 1288,
									"name": "DUP1"
								},
								{
									"begin": 24,
									"end": 1288,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24,
									"end": 1288,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 1288,
									"name": "CODECOPY"
								},
								{
									"begin": 24,
									"end": 1288,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 24,
									"end": 1288,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204974239004b6974425c074f043485c0894b5e7eaa5a84b6b34b97cb6489948c964736f6c63430006010033",
									".code": [
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "MSTORE"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "LT"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "SHR"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH",
											"value": "12065FE0"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH",
											"value": "41C0E1B5"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH",
											"value": "6878DFA4"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH",
											"value": "8381F58A"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH",
											"value": "DAA7FD17"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "EQ"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "JUMPI"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "JUMPDEST"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 1288,
											"name": "REVERT"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "JUMPDEST"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "POP"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "JUMPDEST"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "MLOAD"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "DUP1"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "DUP3"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "DUP2"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "MSTORE"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "ADD"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "SWAP2"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "POP"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "POP"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "MLOAD"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "DUP1"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "SWAP2"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "SUB"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "SWAP1"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "RETURN"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "JUMPDEST"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "POP"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "JUMPDEST"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "STOP"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "JUMPDEST"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "POP"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "JUMPDEST"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "DUP3"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "AND"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "AND"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "DUP2"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "MSTORE"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "ADD"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "SWAP2"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "POP"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "POP"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "SWAP2"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "SUB"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "SWAP1"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "RETURN"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "JUMPDEST"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "POP"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "JUMPDEST"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "MLOAD"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "DUP1"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "DUP3"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "DUP2"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "ADD"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "POP"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "POP"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "MLOAD"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "DUP1"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "SWAP2"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "SUB"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "SWAP1"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "RETURN"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "JUMPDEST"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "JUMPDEST"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "MLOAD"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "DUP1"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "DUP3"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "ISZERO"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "ISZERO"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "ISZERO"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "ISZERO"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "DUP2"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "MSTORE"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "ADD"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "SWAP2"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "POP"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "POP"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "MLOAD"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "DUP1"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "SWAP2"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "SUB"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "SWAP1"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "RETURN"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "JUMPDEST"
										},
										{
											"begin": 396,
											"end": 400,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 419,
											"end": 440,
											"name": "SELFBALANCE"
										},
										{
											"begin": 412,
											"end": 440,
											"name": "SWAP1"
										},
										{
											"begin": 412,
											"end": 440,
											"name": "POP"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "SWAP1"
										},
										{
											"begin": 353,
											"end": 447,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1150,
											"end": 1281,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "DUP1"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "SLOAD"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "EXP"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "SWAP1"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "DIV"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1205,
											"end": 1210,
											"name": "AND"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "AND"
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "CALLER"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "AND"
										},
										{
											"begin": 1191,
											"end": 1210,
											"name": "EQ"
										},
										{
											"begin": 1183,
											"end": 1211,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1183,
											"end": 1211,
											"name": "JUMPI"
										},
										{
											"begin": 1183,
											"end": 1211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1211,
											"name": "DUP1"
										},
										{
											"begin": 1183,
											"end": 1211,
											"name": "REVERT"
										},
										{
											"begin": 1183,
											"end": 1211,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1183,
											"end": 1211,
											"name": "JUMPDEST"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "DUP1"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "SWAP1"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "SLOAD"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "SWAP1"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "EXP"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "SWAP1"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "DIV"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "AND"
										},
										{
											"begin": 1221,
											"end": 1240,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1221,
											"end": 1240,
											"name": "AND"
										},
										{
											"begin": 1221,
											"end": 1240,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "JUMPDEST"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "SWAP1"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "SLOAD"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "SWAP1"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "EXP"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "SWAP1"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "DIV"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "AND"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "DUP2"
										},
										{
											"begin": 49,
											"end": 77,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "JUMPDEST"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "SLOAD"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "DUP2"
										},
										{
											"begin": 98,
											"end": 116,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "JUMPDEST"
										},
										{
											"begin": 515,
											"end": 519,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 548,
											"end": 549,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 545,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 539,
											"end": 545,
											"name": "SLOAD"
										},
										{
											"begin": 539,
											"end": 549,
											"name": "GT"
										},
										{
											"begin": 531,
											"end": 550,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 531,
											"end": 550,
											"name": "JUMPI"
										},
										{
											"begin": 531,
											"end": 550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 531,
											"end": 550,
											"name": "DUP1"
										},
										{
											"begin": 531,
											"end": 550,
											"name": "REVERT"
										},
										{
											"begin": 531,
											"end": 550,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 531,
											"end": 550,
											"name": "JUMPDEST"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 595,
											"end": 607,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 595,
											"end": 605,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 595,
											"end": 607,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 595,
											"end": 607,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 595,
											"end": 607,
											"name": "JUMPDEST"
										},
										{
											"begin": 595,
											"end": 611,
											"name": "GT"
										},
										{
											"begin": 587,
											"end": 612,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 587,
											"end": 612,
											"name": "JUMPI"
										},
										{
											"begin": 587,
											"end": 612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 587,
											"end": 612,
											"name": "DUP1"
										},
										{
											"begin": 587,
											"end": 612,
											"name": "REVERT"
										},
										{
											"begin": 587,
											"end": 612,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 587,
											"end": 612,
											"name": "JUMPDEST"
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 641,
											"end": 647,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP2"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "SLOAD"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "DUP1"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "SWAP3"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "SWAP2"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "SWAP1"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "SWAP1"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "SUB"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "SWAP2"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "SWAP1"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "SSTORE"
										},
										{
											"begin": 641,
											"end": 650,
											"name": "POP"
										},
										{
											"begin": 954,
											"end": 965,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 968,
											"end": 970,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "SWAP1"
										},
										{
											"begin": 954,
											"end": 970,
											"name": "POP"
										},
										{
											"begin": 980,
											"end": 992,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 995,
											"end": 1007,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 995,
											"end": 1005,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 995,
											"end": 1007,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 995,
											"end": 1007,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 995,
											"end": 1007,
											"name": "JUMPDEST"
										},
										{
											"begin": 980,
											"end": 1007,
											"name": "SWAP1"
										},
										{
											"begin": 980,
											"end": 1007,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1058,
											"name": "CALLER"
										},
										{
											"begin": 1048,
											"end": 1067,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1048,
											"end": 1067,
											"name": "AND"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1087,
											"end": 1090,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 1078,
											"end": 1084,
											"name": "DUP5"
										},
										{
											"begin": 1068,
											"end": 1075,
											"name": "DUP5"
										},
										{
											"begin": 1068,
											"end": 1084,
											"name": "MUL"
										},
										{
											"begin": 1068,
											"end": 1090,
											"name": "DUP2"
										},
										{
											"begin": 1068,
											"end": 1090,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 1068,
											"end": 1090,
											"name": "JUMPI"
										},
										{
											"begin": 1068,
											"end": 1090,
											"name": "INVALID"
										},
										{
											"begin": 1068,
											"end": 1090,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 1068,
											"end": 1090,
											"name": "JUMPDEST"
										},
										{
											"begin": 1068,
											"end": 1090,
											"name": "DIV"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "DUP2"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "ISZERO"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "MUL"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "SWAP1"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "MLOAD"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "MLOAD"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "DUP4"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "SUB"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "DUP2"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "DUP6"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "DUP9"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "DUP9"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "CALL"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "SWAP4"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "POP"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1048,
											"end": 1092,
											"name": "POP"
										},
										{
											"begin": 1109,
											"end": 1113,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1102,
											"end": 1113,
											"name": "SWAP3"
										},
										{
											"begin": 1102,
											"end": 1113,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1113,
											"name": "POP"
										},
										{
											"begin": 1102,
											"end": 1113,
											"name": "POP"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "SWAP1"
										},
										{
											"begin": 469,
											"end": 1120,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"kill()": "41c0e1b5",
							"number()": "8381f58a",
							"stakeMoney()": "daa7fd17",
							"tuhao()": "6878dfa4"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.1+commit.e6f7d5a4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_number\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"number\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeMoney\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tuhao\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"11-redpacket.sol\":\"redpacket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"11-redpacket.sol\":{\"keccak256\":\"0x7c28b39fdbc36e98009035df79c3cd03966bd95747c8686b9cd8fc73dfa86edb\",\"urls\":[\"bzz-raw://b3afd00087db4cbd80faf684c8b71e088d96221cf926a39e7cdb9c81f72aa73b\",\"dweb:/ipfs/QmNnodxNq6FMUokVnURjvZv96DE5LHCaYDnAC2i9qMRYG3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "11-redpacket.sol:redpacket",
								"label": "tuhao",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "11-redpacket.sol:redpacket",
								"label": "number",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"11-redpacket.sol": {
				"ast": {
					"absolutePath": "11-redpacket.sol",
					"exportedSymbols": {
						"redpacket": [
							93
						]
					},
					"id": 94,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "0:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 93,
							"linearizedBaseContracts": [
								93
							],
							"name": "redpacket",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "6878dfa4",
									"id": 3,
									"name": "tuhao",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 93,
									"src": "49:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "49:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8381f58a",
									"id": 5,
									"name": "number",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 93,
									"src": "98:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "98:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "222:107:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 10,
														"name": "tuhao",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "232:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "240:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "240:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "232:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "232:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 15,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "286:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 16,
														"name": "_number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "295:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "286:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 18,
												"nodeType": "ExpressionStatement",
												"src": "286:16:0"
											}
										]
									},
									"documentation": null,
									"id": 20,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"name": "_number",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 20,
												"src": "193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "193:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "192:14:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "222:0:0"
									},
									"scope": 93,
									"src": "181:148:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "402:45:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 27,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "427:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_redpacket_$93",
																	"typeString": "contract redpacket"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_redpacket_$93",
																	"typeString": "contract redpacket"
																}
															],
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "419:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 25,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "419:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "419:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "419:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 24,
												"id": 30,
												"nodeType": "Return",
												"src": "412:28:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "12065fe0",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 32,
												"src": "396:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "396:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "395:6:0"
									},
									"scope": 93,
									"src": "353:94:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "521:599:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 38,
																"name": "number",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "539:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "548:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "539:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															111,
															112
														],
														"referencedDeclaration": 111,
														"src": "531:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "531:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "531:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 44,
																	"name": "getBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "595:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "595:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "610:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "595:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 43,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															111,
															112
														],
														"referencedDeclaration": 111,
														"src": "587:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "587:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "587:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "641:9:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 50,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "641:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "641:9:0"
											},
											{
												"assignments": [
													54
												],
												"declarations": [
													{
														"constant": false,
														"id": 54,
														"name": "random",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 76,
														"src": "954:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 53,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "954:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 56,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "3130",
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "968:2:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_10_by_1",
														"typeString": "int_const 10"
													},
													"value": "10"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "954:16:0"
											},
											{
												"assignments": [
													58
												],
												"declarations": [
													{
														"constant": false,
														"id": 58,
														"name": "balance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 76,
														"src": "980:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 57,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "980:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 61,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 59,
														"name": "getBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "995:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "995:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "980:27:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 67,
																	"name": "balance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 58,
																	"src": "1068:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 68,
																	"name": "random",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 54,
																	"src": "1078:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1068:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1087:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1068:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 62,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 108,
																"src": "1048:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1048:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1048:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1048:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "1048:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1109:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 36,
												"id": 75,
												"nodeType": "Return",
												"src": "1102:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "daa7fd17",
									"id": 77,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stakeMoney",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "488:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 77,
												"src": "515:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 34,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "515:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "514:6:0"
									},
									"scope": 93,
									"src": "469:651:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "1173:108:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 81,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 108,
																	"src": "1191:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1191:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 83,
																"name": "tuhao",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1205:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1191:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 80,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															111,
															112
														],
														"referencedDeclaration": 111,
														"src": "1183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1183:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1183:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 88,
															"name": "tuhao",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "1234:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 87,
														"name": "selfdestruct",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "1221:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_payable_$returns$__$",
															"typeString": "function (address payable)"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1221:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1221:19:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "41c0e1b5",
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "kill",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1163:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1173:0:0"
									},
									"scope": 93,
									"src": "1150:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 94,
							"src": "24:1264:0"
						}
					],
					"src": "0:1288:0"
				},
				"id": 0
			}
		}
	}
}